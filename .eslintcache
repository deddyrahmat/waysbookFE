[{"D:\\Projek\\fullstack javascript\\wow\\src\\index.js":"1","D:\\Projek\\fullstack javascript\\wow\\src\\pages\\App.js":"2","D:\\Projek\\fullstack javascript\\wow\\src\\pages\\Landing\\index.js":"3","D:\\Projek\\fullstack javascript\\wow\\src\\components\\index.js":"4","D:\\Projek\\fullstack javascript\\wow\\src\\assets\\index.js":"5","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\index.js":"6","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Routes\\index.js":"7","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Buttons\\index.js":"8","D:\\Projek\\fullstack javascript\\wow\\src\\pages\\index.js":"9","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\index.js":"10","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Auth\\Register.js":"11","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\index.js":"12","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Auth\\Login.js":"13","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Context\\index.js":"14","D:\\Projek\\fullstack javascript\\wow\\src\\pages\\Home\\index.js":"15","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Inputs\\index.js":"16","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Routes\\PrivateRoute.js":"17","D:\\Projek\\fullstack javascript\\wow\\src\\FakeData\\index.js":"18","D:\\Projek\\fullstack javascript\\wow\\src\\FakeData\\Users\\index.js":"19","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Sidebar\\index.js":"20","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\MainContent\\index.js":"21","D:\\Projek\\fullstack javascript\\wow\\src\\pages\\Dashboard\\index.js":"22","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Routes\\PrivateRouteAdmin.js":"23","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Navbars\\index.js":"24","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Transactions\\index.js":"25","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Book\\AddBook.js":"26","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\HeroImage\\index.js":"27","D:\\Projek\\fullstack javascript\\wow\\src\\FakeData\\Books\\index.js":"28","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Subscribe\\index.js":"29","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Uploads\\index.js":"30","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Profile\\index.js":"31","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Profile\\ListBookProfile.js":"32","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Profile\\HeroProfile.js":"33","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\DetailBook\\index.js":"34","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\DetailBook\\InfoDetailBook.js":"35","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\DetailBook\\AboutDetailBook.js":"36","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\ReadBook\\index.js":"37","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\API\\index.js":"38","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Loading\\index.js":"39","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Logout\\index.js":"40","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\index.js":"41","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\pages\\App.js":"42","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\configs\\Routes\\PrivateRouteAdmin.js":"43","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\configs\\API\\index.js":"44","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\atoms\\index.js":"45","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\pages\\Dashboard\\index.js":"46","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Auth\\Login.js":"47","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\atoms\\Inputs\\index.js":"48","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\atoms\\Logout\\index.js":"49","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\HeroImage\\index.js":"50","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\DetailBook\\index.js":"51","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Cart\\index.js":"52","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Profile\\index.js":"53","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\DetailBook\\InfoDetailBook.js":"54","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Profile\\HeroProfile.js":"55","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\MainContent\\index.js":"56","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Navbars\\index.js":"57","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Auth\\Register.js":"58","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\configs\\Routes\\PrivateRoute.js":"59","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\configs\\Context\\index.js":"60","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\index.js":"61","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\pages\\index.js":"62","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\index.js":"63","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\pages\\Landing\\index.js":"64","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\pages\\Home\\index.js":"65","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Book\\AddBook.js":"66","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Subscribe\\index.js":"67","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\atoms\\Uploads\\index.js":"68","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\atoms\\Buttons\\index.js":"69","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\assets\\index.js":"70","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\DetailBook\\AboutDetailBook.js":"71","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Profile\\ListBookProfile.js":"72","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\configs\\Routes\\index.js":"73","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\configs\\index.js":"74","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Cart\\BookCart.js":"75","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Transactions\\index.js":"76","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\atoms\\Loading\\index.js":"77","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Book\\index.js":"78"},{"size":392,"mtime":1612908135148,"results":"79","hashOfConfig":"80"},{"size":1197,"mtime":1612949664682,"results":"81","hashOfConfig":"80"},{"size":1233,"mtime":1612056809181,"results":"82","hashOfConfig":"80"},{"size":54,"mtime":1611731293470,"results":"83","hashOfConfig":"80"},{"size":1181,"mtime":1612821750545,"results":"84","hashOfConfig":"80"},{"size":219,"mtime":1612949057411,"results":"85","hashOfConfig":"80"},{"size":1083,"mtime":1612949086391,"results":"86","hashOfConfig":"80"},{"size":546,"mtime":1612081352554,"results":"87","hashOfConfig":"80"},{"size":135,"mtime":1611869222660,"results":"88","hashOfConfig":"80"},{"size":639,"mtime":1612344960869,"results":"89","hashOfConfig":"80"},{"size":6739,"mtime":1613310017551,"results":"90","hashOfConfig":"80"},{"size":347,"mtime":1612790642726,"results":"91","hashOfConfig":"80"},{"size":5868,"mtime":1613118810805,"results":"92","hashOfConfig":"80"},{"size":2237,"mtime":1613290337632,"results":"93","hashOfConfig":"80"},{"size":7684,"mtime":1613311610711,"results":"94","hashOfConfig":"80"},{"size":601,"mtime":1611785619952,"results":"95","hashOfConfig":"80"},{"size":1375,"mtime":1613123150875,"results":"96","hashOfConfig":"80"},{"size":86,"mtime":1611912361576,"results":"97","hashOfConfig":"80"},{"size":2132,"mtime":1612003440369,"results":"98","hashOfConfig":"80"},{"size":4032,"mtime":1612949128224,"results":"99","hashOfConfig":"80"},{"size":3461,"mtime":1613224786632,"results":"100","hashOfConfig":"80"},{"size":1959,"mtime":1612751442576,"results":"101","hashOfConfig":"80"},{"size":1364,"mtime":1613123159877,"results":"102","hashOfConfig":"80"},{"size":2192,"mtime":1612954378697,"results":"103","hashOfConfig":"80"},{"size":10716,"mtime":1613376702068,"results":"104","hashOfConfig":"80"},{"size":10246,"mtime":1613375233933,"results":"105","hashOfConfig":"80"},{"size":1017,"mtime":1613209471612,"results":"106","hashOfConfig":"80"},{"size":5668,"mtime":1612041676069,"results":"107","hashOfConfig":"80"},{"size":7859,"mtime":1612969008398,"results":"108","hashOfConfig":"80"},{"size":1711,"mtime":1613188171621,"results":"109","hashOfConfig":"80"},{"size":370,"mtime":1612842182134,"results":"110","hashOfConfig":"80"},{"size":3040,"mtime":1613290399430,"results":"111","hashOfConfig":"80"},{"size":5044,"mtime":1613123464476,"results":"112","hashOfConfig":"80"},{"size":369,"mtime":1612076198705,"results":"113","hashOfConfig":"80"},{"size":2890,"mtime":1613263866609,"results":"114","hashOfConfig":"80"},{"size":4386,"mtime":1613309395763,"results":"115","hashOfConfig":"80"},{"size":1721,"mtime":1613229273864,"results":"116","hashOfConfig":"80"},{"size":400,"mtime":1613198738868,"results":"117","hashOfConfig":"80"},{"size":543,"mtime":1613122282332,"results":"118","hashOfConfig":"80"},{"size":488,"mtime":1612948891756,"results":"119","hashOfConfig":"80"},{"size":484,"mtime":1613549665558,"results":"120","hashOfConfig":"121"},{"size":1261,"mtime":1614259233917,"results":"122","hashOfConfig":"121"},{"size":1364,"mtime":1613123159877,"results":"123","hashOfConfig":"121"},{"size":400,"mtime":1613198738868,"results":"124","hashOfConfig":"121"},{"size":219,"mtime":1612949057411,"results":"125","hashOfConfig":"121"},{"size":2079,"mtime":1614305872536,"results":"126","hashOfConfig":"121"},{"size":5870,"mtime":1613705856957,"results":"127","hashOfConfig":"121"},{"size":601,"mtime":1611785619952,"results":"128","hashOfConfig":"121"},{"size":488,"mtime":1612948891756,"results":"129","hashOfConfig":"121"},{"size":1017,"mtime":1613209471612,"results":"130","hashOfConfig":"121"},{"size":561,"mtime":1613790822584,"results":"131","hashOfConfig":"121"},{"size":10230,"mtime":1613916583927,"results":"132","hashOfConfig":"121"},{"size":562,"mtime":1613916601634,"results":"133","hashOfConfig":"121"},{"size":3712,"mtime":1613790814999,"results":"134","hashOfConfig":"121"},{"size":5079,"mtime":1613916684237,"results":"135","hashOfConfig":"121"},{"size":7679,"mtime":1614260364981,"results":"136","hashOfConfig":"121"},{"size":6392,"mtime":1614308466129,"results":"137","hashOfConfig":"121"},{"size":6632,"mtime":1613705866088,"results":"138","hashOfConfig":"121"},{"size":1375,"mtime":1613123150875,"results":"139","hashOfConfig":"121"},{"size":5905,"mtime":1613915934348,"results":"140","hashOfConfig":"121"},{"size":54,"mtime":1611731293470,"results":"141","hashOfConfig":"121"},{"size":135,"mtime":1611869222660,"results":"142","hashOfConfig":"121"},{"size":571,"mtime":1614305724101,"results":"143","hashOfConfig":"121"},{"size":328,"mtime":1613534222942,"results":"144","hashOfConfig":"121"},{"size":3440,"mtime":1614305703863,"results":"145","hashOfConfig":"121"},{"size":11725,"mtime":1614308572034,"results":"146","hashOfConfig":"121"},{"size":7859,"mtime":1612969008398,"results":"147","hashOfConfig":"121"},{"size":1711,"mtime":1613830007941,"results":"148","hashOfConfig":"121"},{"size":702,"mtime":1613742336491,"results":"149","hashOfConfig":"121"},{"size":1471,"mtime":1613830505101,"results":"150","hashOfConfig":"121"},{"size":3290,"mtime":1613827395673,"results":"151","hashOfConfig":"121"},{"size":4623,"mtime":1614259017984,"results":"152","hashOfConfig":"121"},{"size":1083,"mtime":1612949086391,"results":"153","hashOfConfig":"121"},{"size":347,"mtime":1612790642726,"results":"154","hashOfConfig":"121"},{"size":3739,"mtime":1613915798250,"results":"155","hashOfConfig":"121"},{"size":11601,"mtime":1613891247536,"results":"156","hashOfConfig":"121"},{"size":543,"mtime":1613122282332,"results":"157","hashOfConfig":"121"},{"size":4876,"mtime":1614309127069,"results":"158","hashOfConfig":"121"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},"1uc4s6b",{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"161"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"170"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"161"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"161"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"161"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"178"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"161"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"161"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"199"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"161"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"178"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"170"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"161"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},"1a4pck0",{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"262"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"266"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"292"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"281"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"269"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"269"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"266"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"266"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"262"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"262"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"262"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"350"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"262"},"D:\\Projek\\fullstack javascript\\wow\\src\\index.js",[],["354","355"],"D:\\Projek\\fullstack javascript\\wow\\src\\pages\\App.js",["356"],"D:\\Projek\\fullstack javascript\\wow\\src\\pages\\Landing\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\assets\\index.js",[],["357","358"],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Routes\\index.js",["359"],"import {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\n\r\n// components\r\nimport { Logout } from \"../../components\";\r\nimport { Landing, Home, Dashboard } from \"../../pages\";\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PrivateRouteAdmin from './PrivateRouteAdmin';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Router>\r\n            {/* <Switch> */}\r\n                {/* <Route path=\"/dashboard\">\r\n                    <Dashboard />\r\n                </Route> */}\r\n\r\n                <Route exact path=\"/\">\r\n                    <Landing />\r\n                </Route>\r\n\r\n                <Route exact path=\"/logout\">\r\n                    <Logout />\r\n                </Route>\r\n\r\n                {/* <Route path=\"/user\">\r\n                    <Home />\r\n                </Route> */}\r\n                \r\n\r\n                <PrivateRoute path=\"/user\" component={Home} />\r\n                <PrivateRouteAdmin path=\"/admin\" component={Dashboard} />\r\n                \r\n            {/* </Switch> */}\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Buttons\\index.js",[],["360","361"],"D:\\Projek\\fullstack javascript\\wow\\src\\pages\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Auth\\Register.js",["362","363"],"import React, { Fragment, useState, useContext, useEffect } from 'react'\r\nimport { Col, Container, Form, Modal, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// component\r\nimport {Buttons, Inputs} from '../../';// same ../../index.js take file Buttons\r\nimport {AppContext, API, setAuthToken} from '../../../configs';\r\nimport {Loading} from '../../../components';\r\n\r\n// json Fake Data\r\nimport {Users} from '../../../FakeData';\r\n\r\n// styling\r\nimport \"./Auth.css\";\r\n\r\nconst Register = ({titleModal, classModalButton  }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [state, dispatch] = useContext(AppContext);\r\n\r\n    const [show, setShow] = useState(false);\r\n    \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    // setModal Loading\r\n    const [showModalLoading, setShowModalLoading] = useState(false);\r\n    const handleCloseLoading = () => setShowModalLoading(false);\r\n    const handleShowModalLoading = () => setShowModalLoading(true);\r\n    // setModal Loading\r\n\r\n\r\n    // set modal login when user click link\r\n    const handleLogin = () => {\r\n        handleClose();\r\n        dispatch({\r\n            type: \"MODAL_LOGIN\",\r\n            payload : !state.modalLogin\r\n        });\r\n        handleCloseLoading();\r\n    }\r\n    // set modal login when user click link\r\n\r\n    // set login from another modal\r\n    useEffect(() => {\r\n        if (state.modalRegister) {\r\n            handleShow();\r\n            dispatch({\r\n                type:\"MODAL_REGISTER\",\r\n                payload : !state.modalRegister\r\n            })\r\n        }\r\n    }, [state.modalRegister])\r\n    // set login from another modal\r\n\r\n\r\n    // ======================================================\r\n    // set modal for Register failed\r\n    const [registerFailed, setRegisterFailed] = useState(false);\r\n    const [messageFailed, setMessageFailed] = useState(\"\");\r\n    \r\n    const handleCloseRegisterFailed = () => setRegisterFailed(false);\r\n    const handleRegisterFailed = () => setRegisterFailed(true);\r\n    // set modal for Register failed\r\n    // ======================================================\r\n\r\n    // ======================================================\r\n    // process register\r\n\r\n    const [formDataRegister, setFormDataRegister] = useState({\r\n        email: '',\r\n        password : '',\r\n        fullname : ''\r\n    });\r\n    \r\n    \r\n    const handleChangeRegister=(e)=> {\r\n        setFormDataRegister({\r\n            ...formDataRegister, [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    const {email, password, fullname} = formDataRegister;\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const body = JSON.stringify({email,password, fullname});\r\n\r\n            const config = {\r\n                headers : {\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n            }\r\n\r\n            handleShowModalLoading();\r\n            const response = await API.post('/register',body,config);\r\n\r\n            console.log(\"response register\", response);\r\n            const result = response.data.data.user;\r\n\r\n            if (response.status == 200) {\r\n                dispatch({\r\n                    type : \"AUTH\",\r\n                    payload: {\r\n                        id : result.id,\r\n                        fullname : result.fullname,\r\n                        avatar : null,\r\n                        role : 'user',\r\n                        token : result.token\r\n                    }\r\n                });\r\n\r\n                setAuthToken(result.token);\r\n                history.push('/user');\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(\"Your System Error : \", err);\r\n            setMessageFailed(\"Register Failed\")\r\n            handleRegisterFailed();\r\n        }\r\n    }\r\n    \r\n    // process Register\r\n    // ======================================================\r\n    \r\n    console.log(\"user dari register\",Users);\r\n    console.log(\"state dari register\",state);\r\n    // console.log(\"email register\",email);\r\n    // console.log(\"pass dari register\",password);\r\n    // console.log(\"fullname dari register\",fullname);\r\n    \r\n    return (\r\n        <Fragment>\r\n            {/* <Login titleModal=\"Sign sdf\" classModalButton=\"buttons-grey px-5 font-weight-bold\" /> */}\r\n            <Buttons onClick={handleShow} title={titleModal} className={classModalButton} />\r\n\r\n\r\n            <Modal show={show} onHide={handleClose} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    <Container>\r\n                        <Row className=\"my-3\">\r\n                            <Col md=\"12\">\r\n                                <h2 className=\"title-modal\">{titleModal}</h2>\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Inputs type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={e => handleChangeRegister(e)} />\r\n                                    <Inputs type=\"password\" placeholder=\"Password\" name=\"password\" onChange={e => handleChangeRegister(e)} />\r\n                                    <Inputs type=\"text\" placeholder=\"Full Name\" name=\"fullname\" value={fullname} onChange={e => handleChangeRegister(e)} />\r\n                                    <Buttons className=\"buttons-red btn-block font-weight-bold mt-2 mb-2\"  type=\"submit\" title={titleModal} />\r\n                                </Form>\r\n                                <div className=\"text-link\">\r\n                                    Already have an account ? Klik <b className=\"link-here\" \r\n                                    onClick={handleLogin}>Here</b>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* component modal Register failed */}\r\n            <Modal size=\"lg\" show={registerFailed} onHide={handleCloseRegisterFailed} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    <p className=\"modal-failed\">{messageFailed}</p>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* ================================== */}\r\n                {/* modal loading */}\r\n                {/* ================================== */}\r\n                <Modal size=\"lg\" show={showModalLoading} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                    <Modal.Body >\r\n                        <Loading />\r\n                    </Modal.Body>\r\n                </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\index.js",[],["364","365"],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Auth\\Login.js",["366","367","368"],"import React, { Fragment, useState, useContext, useEffect } from 'react'\r\nimport { Col, Container, Form, Modal, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// component\r\nimport {Buttons, Inputs} from '../../';// same ../../index.js take file Buttons\r\nimport {AppContext, API, setAuthToken} from '../../../configs';\r\n\r\n\r\n// json Fake Data\r\n// import FakeData from '../../../json/FakeData.json'\r\n// import {Users} from '../../../FakeData';\r\n\r\n// styling\r\nimport \"./Auth.css\";\r\n\r\nconst Login = ({titleModal, classModalButton, ...rest  }) => {\r\n    \r\n    const history = useHistory();\r\n\r\n    const [state, dispatch] = useContext(AppContext);\r\n\r\n    // ======================================================\r\n    // set variable show modal login in page\r\n    const [showLogin, setShowLogin] = useState(false);\r\n    \r\n    const handleCloseLogin = () => setShowLogin(false);\r\n    const handleShowLogin = () => setShowLogin(true);\r\n    // set variable show modal login in page\r\n    // ======================================================\r\n\r\n    // ======================================================\r\n    // set modal for login failed\r\n    const [loginFailed, setLoginFailed] = useState(false);\r\n    \r\n    const handleCloseLoginFailed = () => setLoginFailed(false);\r\n    const handleLoginFailed = () => setLoginFailed(true);\r\n    // set modal for login failed\r\n    // ======================================================\r\n\r\n    // ======================================================\r\n    // set modal register when user click link\r\n    const handleRegister = () => {\r\n        handleCloseLogin();\r\n        dispatch({\r\n            type: \"MODAL_REGISTER\",\r\n            payload : !state.modalRegister\r\n        });\r\n    }\r\n    // set modal register when user click link\r\n    // ======================================================\r\n\r\n    // ======================================================\r\n    // set login from another modal\r\n    useEffect(() => {\r\n        if (state.modalLogin) {\r\n            handleShowLogin();\r\n            dispatch({\r\n                type:\"MODAL_LOGIN\",\r\n                payload : !state.modalLogin\r\n            })\r\n        }\r\n    }, [state.modalLogin])\r\n    // set login from another modal\r\n    // ======================================================\r\n    \r\n    // ======================================================\r\n    // process login\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password : ''\r\n    });\r\n    \r\n    const handleChangeLogin=(e)=> {\r\n        setFormData({\r\n            ...formData, [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    \r\n    const {email, password} = formData;\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const body = JSON.stringify({ email, password });\r\n\r\n            const config = {\r\n                headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n\r\n            const response = await API.post(\"/login\", body, config);\r\n\r\n            console.log(\"hasil response login\",response);     \r\n            const result = response.data.data.user;\r\n            if (response.status == 200) {\r\n                console.log(\"hasil response login\",response.data.data.user);                \r\n                    dispatch({\r\n                    type : \"AUTH\",\r\n                    payload: result\r\n                });\r\n\r\n                setAuthToken(result.token);\r\n\r\n                // cek role for redirect page where role user\r\n                if (result.role == \"admin\") {\r\n                    history.push('/admin');                \r\n                }else{\r\n                    history.push('/user');\r\n                }\r\n            }\r\n        } catch (err) {\r\n            handleLoginFailed();\r\n            console.log(\"error : \", err);            \r\n        }\r\n    }\r\n    \r\n    // process login\r\n    // ======================================================\r\n\r\n    \r\n    \r\n    return (\r\n        <Fragment>\r\n            <Buttons onClick={handleShowLogin} title={titleModal} className={classModalButton} />\r\n\r\n            <Modal show={showLogin} onHide={handleCloseLogin} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    <Container>\r\n                        <Row className=\"my-3\">\r\n                            <Col md=\"12\">\r\n                                <h2 className=\"title-modal\">{titleModal}</h2>\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Inputs type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={e => handleChangeLogin(e)} />\r\n                                    <Inputs type=\"password\" placeholder=\"Password\" name=\"password\" onChange={e => handleChangeLogin(e)} />\r\n                                    <Buttons className=\"buttons-red btn-block font-weight-bold mt-2 mb-2\"  type=\"submit\" title={titleModal} />\r\n                                </Form>\r\n                                <div className=\"text-link\">\r\n                                    Don't have an account ? Klik <b className=\"link-here\" \r\n                                    onClick={handleRegister}>Here</b>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n\r\n\r\n            {/* component modal login failed */}\r\n            <Modal size=\"lg\" show={loginFailed} onHide={handleCloseLoginFailed} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    <p className=\"modal-failed\">Login Failed</p>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Context\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\pages\\Home\\index.js",["369","370","371","372","373","374","375","376"],"import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport { Row,Col, Container, Alert } from 'react-bootstrap';\r\nimport {\r\n    // BrowserRouter as Router,\r\n    Switch,\r\n    useRouteMatch,\r\n    useLocation,\r\n    useHistory,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\n// Component\r\nimport {PrivateRoute, API} from '../../configs';\r\nimport { DetailBook, MainContent, Profile, Sidebar, Subscribe, ReadBook } from '../../components';\r\nimport {AppContext} from '../../configs';\r\nimport { LogoSidebar } from '../../assets';\r\n// import ReadBook from \"../../components/molecules/DetailBook/ReadBook\"\r\n\r\nconst Home = () => {\r\n\r\n    let paramId = useParams();\r\n\r\n    let history = useHistory();\r\n\r\n    let location = useLocation();\r\n\r\n    const [state, dispatch] = useContext(AppContext);\r\n\r\n    let { path, url } = useRouteMatch();\r\n\r\n    const [statPay, setStatPay] = useState(null);\r\n    const [descCancel, setDescCancel] = useState(null);\r\n\r\n    // menyimpan url terakhir yang menyimpan id book ke variabel locPathReadBook untuk membaca buku\r\n    const locPathReadBook = location.pathname.split(\"/\").slice(-1)[0];\r\n    \r\n    // function untuk memanggil console log di compoennt react\r\n    const ConsoleLog = (child) => {\r\n        console.log(\"log dari fun\",child);\r\n        return false\r\n    }\r\n    \r\n    // ==============================================================================\r\n    // responseUserPayment\r\n    // ==============================================================================\r\n\r\n    const loadUser = async () => {\r\n        try {\r\n            const responseUserPayment = await API('/user');\r\n            console.log(\"responseUserPayment\", responseUserPayment);\r\n\r\n            if (responseUserPayment.status == 200) {\r\n                // console.log(\"response user home\",response.data.data.user.transactions[0].remainingActive);    \r\n                if (responseUserPayment.data.data.user.transactions.length > 0) {\r\n                    // setStatPay(\"tes\")\r\n                    setStatPay(responseUserPayment.data.data.user.transactions[0].paymentStatus)\r\n                    setDescCancel(responseUserPayment.data.data.user.transactions[0].descCancel)\r\n                    if (responseUserPayment.data.data.user.transactions[0].remainingActive > 0) {\r\n                        dispatch({\r\n                            type : \"PAYMENT\"\r\n                        })\r\n                    }                    \r\n                }            \r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your System \",err);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        loadUser();\r\n    }, []);\r\n\r\n    // ==============================================================================\r\n    // responseBookUser\r\n    // ==============================================================================\r\n    \r\n    const loadBookUser = async () => {\r\n        try {\r\n            const responseBookUser = await API('/bookuser');\r\n            console.log(\"responseBookUser\", responseBookUser.data.data.user.Books);\r\n            \r\n            if (responseBookUser.status == 200) {\r\n                // console.log(\"response user home\",response.data.data.user.transactions[0].remainingActive);    \r\n                if (responseBookUser.data.data.user.Books.length > 0) {\r\n                    const result = responseBookUser.data.data.user.Books;\r\n                    dispatch({\r\n                        type : \"ADD_LIST\",\r\n                        payload : result\r\n                    })\r\n                }            \r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your System \",err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadBookUser();\r\n    }, []);\r\n    \r\n    console.log(\"status payment\", statPay);\r\n    console.log(\"status desc cancel\", descCancel);\r\n    \r\n    return (\r\n        <Fragment>\r\n            {\r\n                statPay === \"Pending\" ? (\r\n                    <Alert variant=\"warning\" className=\"text-center\">\r\n                        Please wait for confirmation from admin.\r\n                    </Alert>\r\n                ) : statPay === \"Cancel\" ? (\r\n                    <Alert variant=\"danger\" className=\"text-center\">\r\n                        Transaksi Gagal : {descCancel}\r\n                    </Alert>\r\n                ) : null\r\n            }\r\n            {/* <Router> */}\r\n            {/* { ConsoleLog(location.pathname) }\r\n            { ConsoleLog(locPathReadBook) } */}\r\n                {/* cek apakah halaman user ini memiliki url yang valid untuk membaca buku berdasarkan id buku */}\r\n                {\r\n                    location.pathname === `/user/book/read/${locPathReadBook}` ? (\r\n                        <Row className=\"m-5\">\r\n                            <Col md=\"12\">\r\n                                <Container>\r\n                                    <img src={LogoSidebar} alt=\"tes\" onClick={() => history.goBack()} style={{cursor:\"Pointer\"}} />\r\n                                </Container>\r\n                                <Switch>\r\n                                    <PrivateRoute exact path={`${path}/book/read/:id`} component={SubMain} />\r\n                                </Switch>\r\n                            </Col>\r\n                        </Row>\r\n                    ) : (\r\n                        // namun jika kondisi diatas tidak terpenuhi maka akan diarahkan ke page lain berdasarkan url\r\n                        <Row className=\"m-5\">\r\n                            <Col md=\"3\">\r\n                                <Sidebar />\r\n                            </Col>\r\n                            <Col md=\"9\">\r\n                                <Switch>\r\n                                    <PrivateRoute exact path={path} component={MainContent} />\r\n                                    <PrivateRoute exact path={`${path}/:topicId`} component={Main} />\r\n                                    <PrivateRoute exact path={`${path}/book/detail/:id`} component={SubMain} />\r\n                                </Switch>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    )\r\n\r\n                }\r\n                \r\n            {/* </Router> */}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst SubMain=()=> {\r\n    let { id } = useParams();\r\n    let { path, url } = useRouteMatch();\r\n    let location = useLocation();\r\n    console.log(\"location submain\", location);\r\n\r\n    // console.log('Check parameter topicId', topicId);\r\n    console.log('Check parameter id ', id);\r\n    console.log(\"Check path di home Tes\", path);\r\n    console.log(\"Check url di home Tes\", url);\r\n\r\n    if (location.pathname === `/user/book/detail/${id}`) {\r\n        return(\r\n            <DetailBook />\r\n        );\r\n    }\r\n    else if (location.pathname === `/user/book/read/${id}`) {\r\n        return(\r\n            <ReadBook />\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n            <h3>/{id} check halaman</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst Main =()=> {\r\n    let { topicId } = useParams();\r\n    let { path, url } = useRouteMatch();\r\n    let location = useLocation();\r\n    console.log(\"location Main\", location);\r\n\r\n    console.log('parameter topicId', topicId);\r\n    console.log(\"path di home Tes\", path);\r\n    console.log(\"url di home Tes\", url);\r\n\r\n    if (location.pathname === \"/user/profile\") {\r\n        return(\r\n            <Profile />\r\n        );\r\n    }\r\n    else if (location.pathname === \"/user/subscribe\") {\r\n        return(\r\n            <Subscribe />\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n            <h3>{topicId} tes halaman</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Inputs\\index.js",[],["377","378"],"D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Routes\\PrivateRoute.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\FakeData\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\FakeData\\Users\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Sidebar\\index.js",["379","380","381","382","383"],"import React, { Fragment, useContext, useEffect, useState } from 'react';\r\nimport { Container,Row,Col } from 'react-bootstrap';\r\nimport {\r\n    useLocation,\r\n    useRouteMatch,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\n// component\r\nimport {AppContext} from '../../../configs';\r\n\r\n// images\r\nimport {LogoSidebar, Avatar} from '../../../assets'\r\n\r\n// styling\r\nimport \"./Sidebar.css\";\r\n\r\n// font awesome\r\n// get our fontawesome imports\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faFileInvoiceDollar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Sidebar = () => {\r\n\r\n    let location = useLocation();\r\n    console.log(\"location sidebar\", location);\r\n\r\n    let { path, url } = useRouteMatch();\r\n\r\n    const [state] = useContext(AppContext);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Row className=\"d-flex justify-content-center mt-n2 mb-3\">\r\n                    <Col className=\"text-center\">\r\n                        <Link to=\"/user\" className=\"sidebar-link\">\r\n                            <img src={LogoSidebar} alt=\"logo\" />\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"d-flex justify-content-center mb-4\">\r\n                    <Col className=\"text-center \">\r\n                        <img src={state.avatar === null ? Avatar : state.avatar} alt=\"avatar\" className=\"sidebar-avatar rounded-circle shadow\" />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"d-flex justify-content-center mb-4\">\r\n                    <Col className=\"text-center \">\r\n                        <h3 className=\"sidebar-fullname\">{state.fullname}</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"d-flex justify-content-center\">\r\n                    <Col className=\"text-center \">\r\n                        {\r\n                            state.payment ? (\r\n                                <p className=\"sidebar-status-subscribed\">Subscribed</p>\r\n                            ): (\r\n                                <p className=\"sidebar-status-not\">Not Subscribed Yet </p>\r\n                            )\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <hr className=\"sidebar-hr\"></hr>\r\n\r\n                <Row className=\"d-flex justify-content-center sidebar-menu-length\">\r\n                    <Col>\r\n                    {/* <Link to={`${url}/profile`}>Profile</Link> */}\r\n                        <Link to={`${url}/profile`} className={location.pathname == `${url}/profile` ? \"sidebar-link sidebar-active\" : \"sidebar-link\"} >\r\n                            <p> <FontAwesomeIcon icon={faUser} className=\"sidebar-icon\" />  Profile</p>                            \r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"d-flex justify-content-center mb-5\">\r\n                    <Col>\r\n                        <Link to={`${url}/subscribe`} className={location.pathname == `${url}/subscribe` ? \"sidebar-link sidebar-active\" : \"sidebar-link\"}>\r\n                            <p> <FontAwesomeIcon icon={faFileInvoiceDollar} className=\"sidebar-icon\" />  Subscribe</p>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <hr className=\"sidebar-hr\"></hr>\r\n\r\n                <Row className=\"d-flex justify-content-center sidebar-menu-length\">\r\n                    <Col>\r\n                        <Link to=\"/logout\" className=\"sidebar-link\">\r\n                            <p className=\"sidebar-menu\"> <FontAwesomeIcon icon={faSignOutAlt} className=\"sidebar-icon\" />  Logout</p>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\MainContent\\index.js",["384","385"],"import React, { Fragment, useContext, useState, useEffect } from 'react';\r\nimport { Col, Container, Row, Modal } from 'react-bootstrap';\r\nimport {useHistory, useRouteMatch,} from \"react-router-dom\";\r\n\r\n// component\r\nimport {AppContext, API} from '../../../configs'\r\nimport {HeroImage} from '../';\r\nimport {Loading} from '../../../components';\r\n\r\n\r\n// FakeData\r\n// import {Books} from '../../../FakeData';\r\n\r\n// stying\r\nimport './MainContent.css';\r\n\r\nconst MainContent = (props) => {\r\n\r\n    const history = useHistory();\r\n    \r\n    let { path, url } = useRouteMatch();\r\n    \r\n    const [state] = useContext(AppContext);\r\n\r\n    const [books, setBooks] = useState([]);\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    // ======================================================\r\n    // set modal for login failed\r\n    const [detailBookFailed, setDetailBookFailed] = useState(false);\r\n    const [messageFailed, setMessageFailed] = useState(\"\");\r\n    \r\n    const handleCloseDetailBookFailed = () => setDetailBookFailed(false);\r\n    const handleDetailBookFailed = () => setDetailBookFailed(true);\r\n    // set modal for DetailBook failed\r\n    // ======================================================\r\n    \r\n\r\n    const handleListBook = (id) => {\r\n        if (!state.payment) {\r\n            handleDetailBookFailed();\r\n            setMessageFailed(\"please make a payment to read the latest books\");\r\n        }else{\r\n            history.push(`${url}/book/detail/${id}`)\r\n        }\r\n    }\r\n\r\n    const loadBook = async () => {\r\n        try {\r\n            const response = await API('/books');\r\n            console.log(\"response books\", response);\r\n            if (response.status == 200) {\r\n                setBooks(response.data.data.books);\r\n                setLoading(false);\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your System \", err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadBook();\r\n    }, [])\r\n\r\n\r\n    console.log(\"match from home\", props.matchRouter);\r\n    console.log(\"url from maincontent\", url);\r\n\r\n    console.log(\"books \", books);\r\n    return isLoading ? (<Loading className=\"d-flex justify-content-center align-items-center\" />) : (\r\n        <Fragment>\r\n            <Container >\r\n\r\n                <HeroImage image={books[books.length - 1].thumbnail}  />\r\n\r\n                \r\n                <h3 className=\"title-list\">List Books</h3>\r\n                <Row>\r\n                    {\r\n                        books.map(book => (\r\n                            <Col sm=\"12\" md=\"3\" key={book.id} style={{cursor: 'pointer'}} onClick={() => handleListBook(book.id)}>\r\n                                <img src={book.thumbnail} alt=\"list-books\" className=\"img-fluid list-books\" />\r\n                                <p className=\"font-weight-bold mb-1 mt-3 text-truncate\">{book.title}</p>\r\n                                <p className=\"text-muted\">{book.author}</p>\r\n                            </Col>\r\n                        )).reverse()\r\n                    }\r\n                </Row>\r\n            </Container>\r\n\r\n            {/* modal failed */}\r\n            <Modal size=\"lg\" show={detailBookFailed} onHide={handleCloseDetailBookFailed} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    <p className=\"modal-failed\">{messageFailed}</p>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MainContent\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\pages\\Dashboard\\index.js",["386","387","388","389"],"import React, { Fragment } from 'react'\r\nimport { Container} from 'react-bootstrap'\r\nimport { \r\n    BrowserRouter as Router, \r\n    Link,\r\n    Switch, \r\n    Route, \r\n    useRouteMatch,\r\n    useLocation,\r\n    useHistory,\r\n    useParams } from 'react-router-dom';\r\n\r\n// components\r\nimport { Navbars, Transactions, AddBook } from '../../components'\r\nimport { PrivateRouteAdmin } from '../../configs';\r\n\r\n// styling\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n    let paramId = useParams();\r\n\r\n    let history = useHistory();\r\n\r\n    let location = useLocation();\r\n\r\n    let { path, url } = useRouteMatch();\r\n\r\n    console.log(\"path di dashboard\", path);\r\n    console.log(\"url di dashboard\", url);\r\n    console.log(\"parameter di dashboard\", paramId);\r\n    console.log(\"location di dashboard\", location);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            \r\n            {/* <Router> */}\r\n                <Navbars />\r\n                <Container className=\"mt-4\">\r\n                        <Switch>\r\n                            <PrivateRouteAdmin exact path={path} component={Transactions} />\r\n                            <PrivateRouteAdmin exact path={`${path}/:paramId`} component={Main} />\r\n                        </Switch>\r\n                    \r\n                </Container>                \r\n            {/* </Router> */}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Main =()=> {\r\n    let { paramId } = useParams();\r\n    let { path, url } = useRouteMatch();\r\n    let location = useLocation();\r\n    console.log(\"location Main\", location);\r\n\r\n    // console.log('parameter topicId', paramId);\r\n    console.log(\"path di home Tes\", path);\r\n    console.log(\"url di home Tes\", url);\r\n\r\n\r\n    if (location.pathname === \"/admin/addBook\") {\r\n        return(\r\n            <AddBook />\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n            <h3>{paramId} tes halaman</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Routes\\PrivateRouteAdmin.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Navbars\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Transactions\\index.js",["390","391","392","393","394","395","396"],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Book\\AddBook.js",["397","398","399","400","401"],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\HeroImage\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\FakeData\\Books\\index.js",[],["402","403"],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Subscribe\\index.js",["404","405","406","407","408"],"import React, { Fragment, useState, useContext } from 'react';\r\nimport { Row, Col, Container, Form, Modal, ProgressBar } from 'react-bootstrap';\r\nimport { useHistory,Redirect} from 'react-router-dom';\r\n\r\n// component\r\nimport {AppContext, API} from '../../../configs';\r\nimport {Inputs, Buttons} from '../../../components'\r\n\r\n// images\r\nimport {Wow} from '../../../assets';\r\nimport { Uploads } from '../../atoms';\r\n\r\n// styling\r\nimport \"./Subscribe.css\";\r\n\r\nconst Subscribe = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [state, dispatch] = useContext(AppContext);\r\n\r\n    // setModal Main\r\n    const [showModal, setShowModal] = useState(false);\r\n    const handleClose = () => setShowModal(false);\r\n    const handleShowModal = () => setShowModal(true);\r\n    // setModal Main\r\n    \r\n    \r\n    const [descModalSuccess, setDescModalSuccess] = useState(\"\");\r\n    const [descModalFailed, setDescModalFailed] = useState(\"\");\r\n    \r\n    // set progres upload file\r\n    const [progressUpload, setProgressUpload] = useState(0);\r\n    \r\n    // state modal image\r\n    const [imageModal, setImageModal] = useState(false);\r\n    const handleCloseImage = () => setImageModal(false);\r\n    const handleShowModalImage = () => setImageModal(true);\r\n    // state modal image\r\n    \r\n\r\n    // modal progress uplaod\r\n    const [modalProgressUpload, setmodalProgressUpload] = useState(false);    \r\n    const toggleProgressUpload = () => setmodalProgressUpload(!modalProgressUpload);\r\n    // modal progress uplaod\r\n\r\n    const [account, setAccount] = useState('')\r\n\r\n    const handleChangeAccount = (e) => {\r\n        setAccount(e.target.value)\r\n    }\r\n\r\n    // ==============================================================\r\n    // attachment\r\n    const [image, setImage] = useState({ preview: \"\", raw: \"\" });\r\n    \r\n    const handleImageTransaction = (e) => {\r\n        if (e.target.files.length) {\r\n            setImage({\r\n            preview : URL.createObjectURL(e.target.files[0]),\r\n            raw : e.target.files[0]\r\n        })\r\n    }\r\n    }\r\n    // attachment\r\n    // ==============================================================\r\n    \r\n\r\n    // ==============================================================\r\n    // submit payment\r\n    const handlePayment = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n\r\n            console.log(\"account number\", account);\r\n            const body = new FormData();\r\n            body.append(\"numberAccount\", account);\r\n\r\n            if (image.raw !== \"\") {\r\n                body.append(\"transferProof\", image.raw);                \r\n            }else{\r\n                setDescModalFailed(\"Please upload file payment transfer\");\r\n\r\n                handleShowModal();\r\n            }\r\n\r\n            console.log(\"image prev\", image);\r\n\r\n            console.log(\"body input \", body);\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"content-type\": \"multipart/form-data\",\r\n                },\r\n\r\n                onUploadProgress: progressEvent => {\r\n                    console.log(\"loaded : \", progressUpload.loaded);\r\n                    console.log(\"total : \", progressUpload.total);\r\n                    let percentage = Math.floor((progressEvent.loaded / progressEvent.total) * 100);\r\n                    setProgressUpload(percentage);\r\n\r\n                    if (percentage <= 100) {\r\n                    setmodalProgressUpload(true);\r\n                    }\r\n                }\r\n            };\r\n\r\n            console.log(\"config input \", config);\r\n\r\n            const response = await API.post(\"/transaction\", body, config);\r\n            if (response.status == 200) {\r\n\r\n                // setmodalPost(true);\r\n                // dispatch({\r\n                //     type : \"USER_LOADED\",\r\n                //     payload : state\r\n                // })\r\n\r\n                setDescModalSuccess(\"Thank you for subscribing to premium, your premium package will be active after our admin approves your transaction, thank you\");\r\n\r\n                handleShowModal();\r\n\r\n                // setLoading(false);\r\n                setTimeout(() => {\r\n                    setProgressUpload(0);\r\n                }, 1000)\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(\"Your System Error : \", err);\r\n        }\r\n    }\r\n    // submit payment\r\n    // ==============================================================\r\n\r\n    console.log('image', image);\r\n    console.log('data change input number', account);\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Row className=\"d-flex justify-content-center align-items-center vh-100\">\r\n                    <Col md=\"6\" className=\"text-center\">\r\n                        <h3 className=\"title-subscribe m-0 p-0\">Premium</h3>\r\n                        <div className=\"desc-subscribe\">\r\n                            <p className=\"d-inline\">Pay now and access all the latest books from </p>\r\n                            <img src={Wow} alt=\"icon\" />\r\n                        </div>\r\n                        <div className=\"account-subscribe\">\r\n                            <img src={Wow} alt=\"icon\" />\r\n                            <p className=\"d-inline\">: 0981312323</p>\r\n                        </div>\r\n\r\n                        <Form onSubmit={handlePayment}>\r\n                            <Inputs type=\"text\" placeholder=\"Input Your Account Number\" name=\"numberAccount\" onChange={handleChangeAccount} />\r\n                            <Uploads onChange={handleImageTransaction} className=\"title-file-attachment\" title=\"Attache proof of transfer\" Subscribe=\"aktif\"/>\r\n\r\n                            {\r\n                                image.preview && (\r\n                                    <img src={image.preview} alt=\"attach file\" width=\"50px\" className=\"text-center\" style={{cursor:\"pointer\"}} onClick={handleShowModalImage} onChange={handleImageTransaction} />\r\n                                )\r\n                            }\r\n\r\n                            <Buttons className=\"buttons-red btn-block font-weight-bold mb-2 height-button-subscribe\"  type=\"submit\" title=\"Send\" />\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            {/* component modal */}\r\n            <Modal size=\"lg\" show={showModal} onHide={handleClose} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    {descModalSuccess !== \"\" ? (\r\n                        <p className=\"modal-subscribe\">{descModalSuccess}</p>\r\n                    ) :  (\r\n                        <p className=\"modal-subscribe-failed\">{descModalFailed}</p>\r\n                    )}\r\n                </Modal.Body>\r\n                {\r\n                    descModalSuccess !== \"\" ? \r\n                        showModal == false ? (\r\n                            <Redirect to=\"/user\" />\r\n                        ) : null\r\n\r\n                    : null\r\n                }\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" show={imageModal} onHide={handleCloseImage} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                <Modal.Body >\r\n                    <img src={image.preview} alt=\"attach file\" className=\"text-center img-fluid\" />\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" dialogClassName=\"modal-90w\" show={modalProgressUpload} onHide={toggleProgressUpload} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                <Modal.Body >\r\n                    <div className=\"text-center\">{progressUpload}%</div>\r\n                    {/* <Progress value={progressUpload} /> */}\r\n                    <ProgressBar animated now={progressUpload} />\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Subscribe\r\n",["409","410"],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Uploads\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Profile\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Profile\\ListBookProfile.js",["411","412","413"],"import React, { Fragment, useContext, useState, useEffect } from 'react'\r\nimport { Container, Row, Col, Modal } from 'react-bootstrap';\r\nimport {useHistory, useRouteMatch, useLocation} from \"react-router-dom\";\r\n\r\n// component\r\nimport {AppContext} from '../../../configs';\r\n\r\n// styling\r\nimport \"./Profile.css\";\r\n\r\n\r\nconst ListBookProfile = () => {\r\n\r\n    let { path, url } = useRouteMatch();\r\n\r\n    const history = useHistory();\r\n\r\n    const [state] = useContext(AppContext);\r\n\r\n    console.log(\"list book check url \", url);\r\n    let location = useLocation();\r\n    console.log(\"location list book\", location);\r\n\r\n    // ======================================================\r\n    // set modal for login failed\r\n    const [detailBookFailed, setDetailBookFailed] = useState(false);\r\n    const [messageFailed, setMessageFailed] = useState(\"\");\r\n    \r\n    const handleCloseDetailBookFailed = () => setDetailBookFailed(false);\r\n    const handleDetailBookFailed = () => setDetailBookFailed(true);\r\n    // set modal for DetailBook failed\r\n    // ======================================================\r\n\r\n    const handleListBook = (id) => {\r\n        if (!state.payment) {\r\n            handleDetailBookFailed();\r\n            setMessageFailed(\"please make a payment to read the latest books\");\r\n        }else{\r\n            history.push(`/user/book/detail/${id}`)\r\n            // history.push(`${url}/detail/${id}`)\r\n        }\r\n    }\r\n\r\n    console.log(\"result myList Book\", state.listBook);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container >\r\n                <h3 className=\"title-list\">My List Books</h3>\r\n                <Row>\r\n                    {\r\n                        state.listBook.length == 0 ? (\r\n                            <Col className=\"d-flex justify-content-center\">\r\n                                <h3 className=\"text-danger text-center\">List Book Not Found</h3>\r\n                            </Col>\r\n                        ):(\r\n                            state.listBook.map(book => (\r\n                                <Col sm=\"12\" md=\"3\" key={book.id} style={{cursor: 'pointer'}} onClick={() => handleListBook(book.id)}>\r\n                                    <img src={book.thumbnail} alt=\"list-books\" className=\"img-fluid list-books\" />\r\n                                    <p className=\"font-weight-bold mb-1 mt-3 text-truncate\">{book.title}</p>\r\n                                    <p className=\"text-muted\">{book.author}</p>\r\n                                </Col>\r\n                            )).reverse()\r\n                        )\r\n                    }\r\n                </Row>\r\n            </Container>\r\n\r\n            {/* modal failed */}\r\n            <Modal size=\"lg\" show={detailBookFailed} onHide={handleCloseDetailBookFailed} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    <p className=\"modal-failed\">{messageFailed}</p>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListBookProfile\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Profile\\HeroProfile.js",["414"],"import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n// component\r\nimport {AppContext, API} from '../../../configs';\r\nimport { Avatar,Envelope,Gender,Phone, Maps } from '../../../assets';\r\nimport Loading from '../../atoms/Loading';\r\n\r\n// styling\r\nimport \"./Profile.css\";\r\nimport { Buttons } from '../../atoms';\r\n\r\nconst HeroProfile = () => {\r\n    const [state] = useContext(AppContext);\r\n\r\n    const [detailUser, setDetailUser] =useState([]);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    // const user = Users.find(user => user.id == localStorage.getItem('id_user'));\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async ( )=> {\r\n            try {\r\n                const response = await API('/user');\r\n\r\n                if (response.status == 200) {\r\n                    setDetailUser(response.data.data.user);\r\n                    setIsLoading(false);\r\n                }\r\n            } catch (err) {\r\n                console.log(\"Your System Error : \", err);\r\n            }\r\n        }\r\n\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    console.log(\"state dari profile\", state);\r\n    console.log(\"user dari profile\", detailUser);\r\n    return isLoading ? (<Loading className=\"d-flex justify-content-center align-items-center\" />) : (\r\n        <Fragment>\r\n            <Container>\r\n                <h2 className=\"title-profile\">Profile</h2>\r\n\r\n                <Row>\r\n                    <Col sm=\"12\" md=\"12\">\r\n                        <div className=\"bg-profile\">\r\n\r\n                            <Row className=\"content-profile\">\r\n\r\n                                <Col md=\"9\">\r\n\r\n                                    <Row className=\"height-list-profile\">\r\n                                        <Col md=\"1\" className=\" d-flex justify-content-end align-items-center\">\r\n                                            <img src={Envelope} alt=\"email\" />\r\n                                        </Col>\r\n                                        <Col md=\"11\">\r\n                                            <span className=\" d-block\"> {detailUser.email}</span>\r\n                                            <small className=\"text-muted \">Email</small>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"height-list-profile\">\r\n                                        <Col md=\"1\" className=\" d-flex justify-content-end align-items-center\">\r\n                                            <img src={Gender} alt=\"gender\" />\r\n                                        </Col>\r\n                                        <Col md=\"11\">\r\n                                            <span className=\" d-block\"> {detailUser.gender}</span>\r\n                                            <small className=\"text-muted \">Gender</small>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    \r\n                                    <Row className=\"height-list-profile\">\r\n                                        <Col md=\"1\" className=\" d-flex justify-content-end align-items-center\">\r\n                                            <img src={Phone} alt=\"gender\" />\r\n                                        </Col>\r\n                                        <Col md=\"11\">\r\n                                            <span className=\" d-block\"> {detailUser.phone}</span>\r\n                                            <small className=\"text-muted \">Mobile phone</small>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"height-list-profile\">\r\n                                        <Col md=\"1\" className=\" d-flex justify-content-end align-items-center\">\r\n                                            <img src={Maps} alt=\"gender\" />\r\n                                        </Col>\r\n                                        <Col md=\"11\">\r\n                                            <span className=\" d-block\"> {detailUser.address} </span>\r\n                                            <small className=\"text-muted \">Address</small>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </Col>\r\n\r\n                                <Col md=\"3\">\r\n                                    <img src={detailUser.avatar === null ? Avatar : detailUser.avatar} alt=\"profile_image\" className=\"image-profile img-fluid d-inline-block\" />\r\n\r\n                                    <Buttons className=\"buttons-red btn-block font-weight-bold mt-2 mb-2 d-block\"  type=\"submit\" title=\"Edit Profile\" />\r\n\r\n                                </Col>\r\n                                \r\n                            </Row>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default HeroProfile\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\DetailBook\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\DetailBook\\InfoDetailBook.js",["415","416","417"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport Moment from 'react-moment';\r\n\r\n// component\r\nimport {API} from '../../../configs';\r\nimport {Loading} from '../../';\r\n\r\n// styling\r\nimport './DetailBook.css';\r\n\r\nconst InfoDetailBook = () => {\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    const {id} = useParams();\r\n    console.log(\"log id dari info detail book \", id);\r\n\r\n    const [book, setBook] = useState([]);\r\n\r\n    // const book = Books.find(book => book.id == id);\r\n    const loadBookById = async () => {\r\n        try {\r\n            const response = await API(`/book/${id}`);\r\n\r\n            console.log(\"response getbook by id\", response);\r\n            if (response.status == 200) {\r\n                setBook(response.data.data.book);\r\n                setLoading(false);\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your System \",err);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        loadBookById();\r\n    }, [])\r\n    \r\n    return isLoading ? (<Loading />) : (\r\n        <Fragment>\r\n            <Container>\r\n                <Row>\r\n                    <Col md=\"5\">\r\n                        <img src={book.thumbnail} alt=\"detail-book\" className=\"image-detail-book\" />\r\n                    </Col>\r\n                    <Col md=\"7\" className=\"mt-1\">\r\n                        <div className=\"container-detail-book\">\r\n                            <h2 className=\"title-detail-book m-0 p-0\">{book.title}</h2>\r\n                            <small className=\"author-detail-book\">{book.author}</small>\r\n                        </div>\r\n                        \r\n                        <div className=\"container-detail-book\">\r\n                            <h2 className=\"date-detail-book size-detail-book\">Publication Date</h2>\r\n                            <small className=\"sub-detail-book\">\r\n                                <Moment format='MMM YYYY'>{book.publicationDate}</Moment>\r\n                            </small>\r\n                        </div>\r\n                        \r\n                        <div className=\"container-detail-book\">\r\n                            <h2 className=\"pages-detail-book size-detail-book\">Page</h2>\r\n                            <small className=\"sub-detail-book\">{book.pages}</small>\r\n                        </div>\r\n                        \r\n                        <div className=\"container-detail-book\">\r\n                            <h2 className=\"isbn-detail-book size-detail-book\">ISBN</h2>\r\n                            <small className=\"sub-detail-book\">{book.isbn   }</small>\r\n                        </div>\r\n\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default InfoDetailBook\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\DetailBook\\AboutDetailBook.js",["418","419","420","421","422","423"],"import React, { Fragment,useState, useContext, useEffect } from 'react';\r\nimport { Container, Modal } from 'react-bootstrap';\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\n// styling\r\nimport \"./DetailBook.css\";\r\n\r\n// component\r\nimport {AppContext, API} from '../../../configs';\r\nimport {Buttons} from '../../';// same ../../index.js take file Buttons\r\nimport {Loading} from '../../';\r\n\r\n// images\r\nimport {RightClick, AddList} from '../../../assets'\r\n\r\nconst AboutDetailBook = () => {\r\n\r\n    const {id} = useParams();\r\n    console.log(\"log id dari about detail book \", id);\r\n\r\n    const [state, dispatch] = useContext(AppContext);\r\n\r\n    const [book, setBook] = useState([]);\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    // setModal Loading\r\n    const [showModalLoading, setShowModalLoading] = useState(false);\r\n    const handleCloseLoading = () => setShowModalLoading(false);\r\n    const handleShowModalLoading = () => setShowModalLoading(true);\r\n    // setModal Loading\r\n\r\n    // const book = Books.find(book => book.id == id);\r\n    const loadBookById = async () => {\r\n        try {\r\n            const response = await API(`/book/${id}`);\r\n\r\n            console.log(\"response getbook by id\", response);\r\n            if (response.status == 200) {\r\n                setBook(response.data.data.book);\r\n                setLoading(false);\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your System \",err);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        loadBookById();\r\n    }, [])\r\n    \r\n\r\n    console.log(\"book from get book by id\",book);\r\n    const handleListBook = async (id) => {\r\n\r\n        const body = JSON.stringify({ id });\r\n\r\n        const config = {\r\n            headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        console.log(\"id dari about detail book\", id)\r\n        const response = await API.post('/bookuser', body, config);\r\n        console.log(\"response add list\", response);\r\n        handleShowModalLoading();\r\n        if (response.status == 200) {\r\n            dispatch({\r\n                type : \"ADD_LIST\",\r\n                payload : response.data.data.user.Books\r\n            })\r\n            handleCloseLoading();\r\n        }\r\n    };\r\n    \r\n    useEffect(() => {\r\n    }, [state.listBook])\r\n\r\n    console.log(\"state dari about detail book \", state);\r\n    console.log(\"state length dari about detail book \", state.listBook.length);\r\n\r\n    const activeAddList = state.listBook.map(list => book.id == list.id).filter(check => check == true );\r\n    console.log(\"hasil tes map\", activeAddList);\r\n\r\n    // const activeAddList = tes.filter(check => check == true );\r\n    // console.log(\"hasil tes filter\", activeAddList);\r\n    return isLoading ? (<Loading />) : (\r\n        <Fragment>\r\n            <Container>\r\n                <h3 className=\"title-AboutDetailBook\">About This Book</h3>\r\n\r\n                <p className=\"desc-AboutDetailBook\">\r\n                    {ReactHtmlParser(book.about)}\r\n                </p>\r\n\r\n                <div className=\"d-flex justify-content-end\">\r\n                    {\r\n                        state.listBook.length >= 0 && (\r\n\r\n                            // state.listBook.map(list => book.id != list.id)\r\n                            activeAddList.length == 0  ? (\r\n                                <Buttons className=\"buttons-red font-weight-bold mt-2 mb-2 mr-3\"  type=\"submit\" title=\"Add My List\" icon={AddList} onClick={() => handleListBook(book.id)} />\r\n                            ):null\r\n\r\n                        )\r\n                    }\r\n\r\n                    <Link to={`/user/book/read/${book.id}`}>\r\n                        <Buttons className=\"buttons-grey font-weight-bold mt-2 mb-2\"  type=\"submit\" title=\"Read Book\" icon={RightClick} />\r\n                    </Link>\r\n\r\n                </div>\r\n\r\n            </Container>\r\n\r\n            {/* ================================== */}\r\n            {/* modal loading */}\r\n            {/* ================================== */}\r\n            <Modal size=\"lg\" show={showModalLoading} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                <Modal.Body >\r\n                    <Loading />\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AboutDetailBook\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\ReadBook\\index.js",["424","425"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { ReactReader } from \"react-reader\";\r\n\r\n// component\r\nimport {API} from '../../../configs';\r\nimport {Loading} from '../../../components';\r\n\r\nconst ReadBook = (props) => {\r\n    const {id} = useParams();\r\n\r\n    console.log(\"id read bok\", id);\r\n\r\n    const [book, setBook] = useState([]);\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    const loadBook = async () => {\r\n        try {\r\n            const response = await API(`/book/${id}`);\r\nconsole.log(\"response read book \", response);\r\n            if (response.status == 200) {\r\n                setBook(response.data.data.book);\r\n                setLoading(false);\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your System \",err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadBook();\r\n    }, [])\r\n\r\n    console.log(\"book from read book\", book);\r\n\r\n    return isLoading ? (<Loading />) : (\r\n        <Fragment>\r\n                <Row className=\"vh-100\">\r\n                    <Col>\r\n                        <div style={{position:\"relative\", height: \"100%\"}}>\r\n                            {\" Read Book \"}\r\n                            <ReactReader\r\n                            url={book.bookFile}\r\n                            title={book.title}\r\n                            // location={\"epubcfi(/6/2[cover]!/6)\"}\r\n                            // locationChanged={epubcifi => console.log(epubcifi)}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ReadBook\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\API\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Loading\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Logout\\index.js",["426","427"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { AppContext } from \"../../../configs\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Logout = () => {\r\n    const [state, dispatch] = useContext(AppContext);\r\n    const [isLogout, setIsLogout] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n        type: \"LOGOUT\",\r\n        });\r\n\r\n        setIsLogout(true);\r\n    }, []);\r\n\r\n    return isLogout && <Redirect to=\"/\" />;\r\n};\r\n\r\nexport default Logout;","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\index.js",[],["428","429"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\pages\\App.js",["430"],"import { useContext, useEffect } from \"react\";\n\n//Components\nimport { Routes,setAuthToken, API, AppContext } from '../configs';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token)\n}\n\nfunction App() {\n\n  const [state, dispatch] = useContext(AppContext);\n\n  const loadUser = async () => {\n    try {\n      const response = await API(\"/check-auth\");\n\n      if (response.status === 401) {\n        // jika belum ada token user, arahkan ke state error dan lakukan logout maka akan diarahkan ke landing page\n        return dispatch({\n          type: \"AUTH_ERROR\",\n        });\n      }else if (response.status === 200) {\n\n        // set state sesuai data auth user dari token dan jalankan private route\n        dispatch({\n          type: \"USER_LOADED\",\n          payload: response.data.data\n        });        \n\n        return dispatch({\n          type: \"UPDATE_CART\",\n        });\n      }\n\n\n      // console.log(state);\n      console.log(\"hasil response\",response.data.data);\n\n\n    } catch (err) {\n      dispatch({\n        type: \"AUTH_ERROR\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n\n  console.log(\"App state\",state);\n\n  return (\n      <Routes />\n    // <AppContextProvider>\n    // </AppContextProvider>\n  );\n}\n\nexport default App;\n",["431","432"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\configs\\Routes\\PrivateRouteAdmin.js",[],["433","434"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\configs\\API\\index.js",[],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\atoms\\index.js",[],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\pages\\Dashboard\\index.js",["435","436","437","438"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Auth\\Login.js",["439","440","441"],"import React, { Fragment, useState, useContext, useEffect } from 'react'\r\nimport { Col, Container, Form, Modal, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// component\r\nimport {Buttons, Inputs} from '../../';// same ../../index.js take file Buttons\r\nimport {AppContext, API, setAuthToken} from '../../../configs';\r\n\r\n\r\n// json Fake Data\r\n// import FakeData from '../../../json/FakeData.json'\r\n// import {Users} from '../../../FakeData';\r\n\r\n// styling\r\nimport \"./Auth.css\";\r\n\r\nconst Login = ({titleModal, classModalButton, ...rest  }) => {\r\n    \r\n    const history = useHistory();\r\n\r\n    const [state, dispatch] = useContext(AppContext);\r\n\r\n    // ======================================================\r\n    // set variable show modal login in page\r\n    const [showLogin, setShowLogin] = useState(false);\r\n    \r\n    const handleCloseLogin = () => setShowLogin(false);\r\n    const handleShowLogin = () => setShowLogin(true);\r\n    // set variable show modal login in page\r\n    // ======================================================\r\n\r\n    // ======================================================\r\n    // set modal for login failed\r\n    const [loginFailed, setLoginFailed] = useState(false);\r\n    \r\n    const handleCloseLoginFailed = () => setLoginFailed(false);\r\n    const handleLoginFailed = () => setLoginFailed(true);\r\n    // set modal for login failed\r\n    // ======================================================\r\n\r\n    // ======================================================\r\n    // set modal register when user click link\r\n    const handleRegister = () => {\r\n        handleCloseLogin();\r\n        dispatch({\r\n            type: \"MODAL_REGISTER\",\r\n            payload : !state.modalRegister\r\n        });\r\n    }\r\n    // set modal register when user click link\r\n    // ======================================================\r\n\r\n    // ======================================================\r\n    // set login from another modal\r\n    useEffect(() => {\r\n        if (state.modalLogin) {\r\n            handleShowLogin();\r\n            dispatch({\r\n                type:\"MODAL_LOGIN\",\r\n                payload : !state.modalLogin\r\n            })\r\n        }\r\n    }, [state.modalLogin])\r\n    // set login from another modal\r\n    // ======================================================\r\n    \r\n    // ======================================================\r\n    // process login\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password : ''\r\n    });\r\n    \r\n    const handleChangeLogin=(e)=> {\r\n        setFormData({\r\n            ...formData, [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    \r\n    const {email, password} = formData;\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const body = JSON.stringify({ email, password });\r\n\r\n            const config = {\r\n                headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n\r\n            const response = await API.post(\"/login\", body, config);\r\n\r\n            console.log(\"hasil response login\",response);     \r\n            const result = response.data.data.user;\r\n            if (response.status == 200) {\r\n                console.log(\"hasil response login\",response.data.data.user);                \r\n                    dispatch({\r\n                    type : \"AUTH\",\r\n                    payload: result\r\n                });\r\n\r\n                setAuthToken(result.token);\r\n\r\n                // cek role for redirect page where role user\r\n                if (result.role == \"admin\") {\r\n                    history.push('/admin');                \r\n                }else{\r\n                    history.push('/user');\r\n                }\r\n            }\r\n        } catch (err) {\r\n            handleLoginFailed();\r\n            console.log(\"error : \", err);            \r\n        }\r\n    }\r\n    \r\n    // process login\r\n    // ======================================================\r\n\r\n    \r\n    \r\n    return (\r\n        <Fragment>\r\n            <Buttons onClick={handleShowLogin} title={titleModal} className={classModalButton} />\r\n\r\n            <Modal show={showLogin} onHide={handleCloseLogin} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    <Container>\r\n                        <Row className=\"my-3\">\r\n                            <Col md=\"12\">\r\n                                <h2 className=\"title-modal\">{titleModal}</h2>\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Inputs type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={e => handleChangeLogin(e)} />\r\n                                    <Inputs type=\"password\" placeholder=\"Password\" name=\"password\" onChange={e => handleChangeLogin(e)} />\r\n                                    <Buttons className=\"buttons-black btn-block font-weight-bold mt-2 mb-2\"  type=\"submit\" title={titleModal} />\r\n                                </Form>\r\n                                <div className=\"text-link\">\r\n                                    Don't have an account ? Klik <b className=\"link-here\" \r\n                                    onClick={handleRegister}>Here</b>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n\r\n\r\n            {/* component modal login failed */}\r\n            <Modal size=\"lg\" show={loginFailed} onHide={handleCloseLoginFailed} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    <p className=\"modal-failed\">Login Failed</p>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\atoms\\Inputs\\index.js",[],["442","443"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\atoms\\Logout\\index.js",["444","445"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\HeroImage\\index.js",[],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\DetailBook\\index.js",[],["446","447"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Cart\\index.js",["448","449"],"import { Fragment,useEffect, useContext,useState } from 'react';\r\nimport { Col, Container, Row, Modal, Form } from 'react-bootstrap';\r\nimport NumberFormat from 'react-number-format';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nimport {AppContext, API} from '../../../configs';\r\n\r\nimport BookCart from './BookCart';\r\n// import { Uploads } from '../../atoms';\r\nimport {Buttons} from '../../';// same ../../index.js take file Buttons\r\n\r\n// styling\r\nimport './Cart.css';\r\n\r\n// images\r\nimport { Payment } from '../../../assets';\r\nimport { Loading } from '../../atoms';\r\n\r\nconst Cart = () => {\r\n\r\n    const [state, dispatch] = useContext(AppContext);\r\n\r\n    const [image, setImage] = useState({ preview: \"\", raw: \"\" });\r\n    \r\n    useEffect(() => {\r\n        dispatch({\r\n        type: \"GET_TOTAL_CART\",\r\n        });\r\n    }, [dispatch]);\r\n    \r\n\r\n    // ==============================================================\r\n    // image book\r\n    \r\n    const handleImageTransaction = (e) => {\r\n        if (e.target.files.length) {\r\n            setImage({\r\n                preview : URL.createObjectURL(e.target.files[0]),\r\n                raw : e.target.files[0]\r\n            })\r\n        }\r\n\r\n        console.log(\"image\", image);\r\n        console.log(\" e.target.files image\",  e.target.files[0].type);\r\n    }\r\n    // image book\r\n    // ==============================================================\r\n\r\n    // state modal image\r\n    const [imageModal, setImageModal] = useState(false);\r\n    const toggleImage = () => setImageModal(!imageModal);\r\n    // state modal image\r\n\r\n    // modal post failed\r\n    const [modalFailed, setModalFailed] = useState(false);\r\n    const toggleFailed = () => setModalFailed(!modalFailed);\r\n    // modal post failed\r\n\r\n    // modal post Loading\r\n    const [modalLoading, setModalLoading] = useState(false);\r\n    const toggleLoading = () => setModalLoading(!modalLoading);\r\n    // modal post Loading\r\n\r\n    // modal Book Success\r\n    const [modalBook, setModalBook] = useState(false);    \r\n    const toggleModalBook = () => setModalBook(!modalBook);\r\n    // modal Book Success\r\n\r\n    const onPay = async () => {\r\n        try {\r\n\r\n            const books = JSON.stringify(state.carts.map(cart =>\r\n                {\r\n                    return {\r\n                        id : cart.id\r\n                    }\r\n                }\r\n            ))\r\n\r\n            console.log(\"data books id\",books);\r\n\r\n            const body = new FormData();\r\n            body.append(\"books\",books)\r\n            body.append(\"totalPayment\",state.totalCart.total)\r\n            if (image.raw) {\r\n                body.append(\"attachment\", image.raw);\r\n                // body.append(\"image\", imagePost[0]);\r\n            }else{\r\n                return setModalFailed(true);\r\n            }\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"content-type\": \"multipart/form-data\",\r\n                }\r\n            }\r\n\r\n            toggleLoading();\r\n            const response = await API.post('/transaction', body, config);\r\n\r\n            console.log(\"response book \", response);\r\n            if (response.status == 200) {\r\n                console.log(\"value loading true \", modalLoading);\r\n                toggleLoading();\r\n                dispatch({\r\n                    type: \"RESET_CART\",\r\n                });\r\n                return toggleModalBook();\r\n            }\r\n        } catch (err) {\r\n            console.log(\"value loading false \", modalLoading);\r\n            console.log(\"Your System \", err);\r\n            return toggleLoading();\r\n        }\r\n    }\r\n\r\n    console.log(\"state cart\",state.carts);\r\n    console.log(\"state total cart\",state.totalCart);\r\n    return (\r\n        <Fragment>\r\n            <div className=\"hero-page d-flex  align-items-center flex-auto\">\r\n                <div className=\"hero1\"></div>\r\n                <div className=\"hero2\"></div>\r\n            </div>\r\n            <Container className=\"height-content mb-3\">\r\n                <Container>\r\n                    <h3 className=\"text-title-cart\">My Cart</h3>\r\n\r\n                    <p>Review Your Order</p>\r\n                    <Row>\r\n                        <Col md=\"7\">\r\n                            <hr></hr>\r\n                            {\r\n                                state.carts.length > 0 && (\r\n                                    state.carts.map(cart => (\r\n                                        <BookCart dataCart={cart} key={cart.id} />\r\n                                    ))\r\n                                )\r\n                            }\r\n                        </Col>\r\n                        <Col md=\"5\">\r\n                            <hr></hr>\r\n                            <div className=\"d-flex justify-content-between text-reguler \">\r\n                                <p >Subtotoal</p>\r\n                                <span >\r\n                                    <NumberFormat \r\n                                    value={state.totalCart.subtotal} \r\n                                    displayType={'text'} \r\n                                    thousandSeparator={true} \r\n                                    prefix={'Rp. '} \r\n                                    renderText={\r\n                                        value => <small className=\"text-reguler\">{value}</small>\r\n                                    } />\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-between text-reguler\">\r\n                                <p>QTY</p>\r\n                                <span>{state.totalCart.qty}</span>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"d-flex justify-content-between text-price\">\r\n                                <p>Total</p>\r\n                                <span>\r\n                                    <NumberFormat \r\n                                    value={state.totalCart.total} \r\n                                    displayType={'text'} \r\n                                    thousandSeparator={true} \r\n                                    prefix={'Rp. '} \r\n                                    renderText={\r\n                                        value => <small className=\"text-price\">{value}</small>\r\n                                    } />\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex justify-content-end mt-3\">\r\n\r\n                                <Form.Group>\r\n                                    {/* untuk input file id label for == id input file untuk menyesuaikkan form yang ingin diproses */}\r\n                                    <Form.Label htmlFor=\"payment\" className=\"attachment-payment\">\r\n                                        <img src={Payment} alt=\"attachment\" className=\"img-fluid\"  />\r\n                                        <Form.Text id=\"passwordHelpBlock\" muted>\r\n                                            Attache of transaction\r\n                                        </Form.Text>\r\n                                    </Form.Label>\r\n\r\n                                    <Form.File id=\"payment\" label=\"Example file input\" className=\"d-none\" onChange={handleImageTransaction} />                \r\n\r\n                                    <Form.Text id=\"passwordHelpBlock\" muted>\r\n                                        Max size of File is 5 MB.\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                {/* <Uploads onChange={handleImageTransaction} className=\"w-25 add-book\" title=\"Thumbnile Book\" Subscribe=\"Aktif\" /> */}\r\n\r\n\r\n                            </div>\r\n\r\n                            <div className=\"d-flex justify-content-end mb-3\">\r\n                                {\r\n                                    image.preview && (\r\n                                        <img src={image.preview} alt=\"Book\" width=\"50px\" height=\"50px\" className=\"text-center ml-3 mt-2\" style={{cursor:\"pointer\"}} onClick={toggleImage} onChange={handleImageTransaction}></img>\r\n                                        )\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <Buttons className=\"buttons-black buttons-pay font-weight-bold mt-2 mb-2 w-50\"  type=\"submit\" title={\"Pay\"} onClick={onPay} />\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Container>\r\n\r\n            <Modal size=\"lg\" show={imageModal} onHide={toggleImage} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                <Modal.Body >\r\n                    <img src={image.preview} alt=\"attach file\" className=\"text-center img-fluid\" />\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" show={modalLoading} onHide={toggleLoading} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                <Modal.Body >\r\n                    <Loading />\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" show={modalFailed} onHide={toggleFailed} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                <Modal.Body >\r\n                    <span className=\"text-danger\">Upload Failed</span>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" show={modalBook} onHide={toggleModalBook} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                <Modal.Body >\r\n                    <p style={{color:\"#469F74\", fontSize:\"24px\", fontWeight:\"normal\", margin:\"auto\", textAlign:\"center\"}}>\r\n                        Thank you for ordering in us, please wait 1 x 24 hours to verify you order\r\n                    </p>\r\n                </Modal.Body>\r\n                {\r\n                    modalBook == false ? (\r\n                    <Redirect to=\"/user/profile\" />\r\n                    ) : null\r\n                }\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n",["450","451"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Profile\\index.js",[],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\DetailBook\\InfoDetailBook.js",["452","453","454"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport Moment from 'react-moment';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n// component\r\nimport {API} from '../../../configs';\r\nimport {Loading} from '../../';\r\n\r\n// styling\r\nimport './DetailBook.css';\r\n\r\nconst InfoDetailBook = () => {\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    const {id} = useParams();\r\n    console.log(\"log id dari info detail book \", id);\r\n\r\n    const [book, setBook] = useState([]);\r\n\r\n    // const book = Books.find(book => book.id == id);\r\n    const loadBookById = async () => {\r\n        try {\r\n            const response = await API(`/book/${id}`);\r\n\r\n            console.log(\"response getbook by id\", response);\r\n            if (response.status == 200) {\r\n                setBook(response.data.data.book);\r\n                setLoading(false);\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your System \",err);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        loadBookById();\r\n    }, [])\r\n    \r\n    return isLoading ? (<Loading />) : (\r\n        <Fragment>\r\n            <Container className=\"height-content\">\r\n                <Row>\r\n                    <Col md=\"5\">\r\n                        <img src={book.thumbnail} alt=\"detail-book\" className=\"image-detail-book\" />\r\n                    </Col>\r\n                    <Col md=\"7\" className=\"mt-1\">\r\n                        <div className=\"container-detail-book\">\r\n                            <h2 className=\"title-detail-book m-0 p-0\">{book.title}</h2>\r\n                            <small className=\"author-detail-book\">{book.author}</small>\r\n                        </div>\r\n                        \r\n                        <div className=\"container-detail-book\">\r\n                            <h2 className=\"date-detail-book size-detail-book\">Publication Date</h2>\r\n                            <small className=\"sub-detail-book\">\r\n                                <Moment format='MMM YYYY'>{book.publicationDate}</Moment>\r\n                            </small>\r\n                        </div>\r\n                        \r\n                        <div className=\"container-detail-book\">\r\n                            <h2 className=\"pages-detail-book size-detail-book\">Page</h2>\r\n                            <small className=\"sub-detail-book\">{book.pages}</small>\r\n                        </div>\r\n                        \r\n                        <div className=\"container-detail-book\">\r\n                            <h2 className=\"isbn-detail-book size-detail-book\">ISBN</h2>\r\n                            <small className=\"sub-detail-book\">{book.isbn   }</small>\r\n                        </div>\r\n\r\n                        <div className=\"container-detail-book\">\r\n                            <h2 className=\"isbn-detail-book size-detail-book\">Price</h2>\r\n                            <small className=\"sub-detail-book\">\r\n                                <NumberFormat \r\n                                value={book.price} \r\n                                displayType={'text'} \r\n                                thousandSeparator={true} \r\n                                prefix={'Rp. '} \r\n                                renderText={\r\n                                    value => <small className=\"price-book d-block mt-3\">{value}</small>\r\n                                } />\r\n                            </small>\r\n                        </div>\r\n\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default InfoDetailBook\r\n","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Profile\\HeroProfile.js",["455"],"import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n// component\r\nimport {AppContext, API} from '../../../configs';\r\nimport { Avatar,Envelope,Gender,Phone, Maps } from '../../../assets';\r\nimport Loading from '../../atoms/Loading';\r\n\r\n// styling\r\nimport \"./Profile.css\";\r\nimport { Buttons } from '../../atoms';\r\n\r\nconst HeroProfile = () => {\r\n    const [state] = useContext(AppContext);\r\n\r\n    const [detailUser, setDetailUser] =useState([]);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    // const user = Users.find(user => user.id == localStorage.getItem('id_user'));\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async ( )=> {\r\n            try {\r\n                const response = await API('/user');\r\n\r\n                if (response.status == 200) {\r\n                    setDetailUser(response.data.data.profile);\r\n                    setIsLoading(false);\r\n                }\r\n            } catch (err) {\r\n                console.log(\"Your System Error : \", err);\r\n            }\r\n        }\r\n\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    console.log(\"state dari profile\", state);\r\n    console.log(\"user dari profile\", detailUser);\r\n    return isLoading ? (<Loading className=\"d-flex justify-content-center align-items-center\" />) : (\r\n        <Fragment>\r\n            <Container className=\"height-content mb-3\">\r\n                <h2 className=\"title-profile\">Profile</h2>\r\n\r\n                <Row>\r\n                    <Col sm=\"12\" md=\"12\">\r\n                        <div className=\"bg-profile\">\r\n\r\n                            <Row className=\"content-profile\">\r\n\r\n                                <Col md=\"9\">\r\n\r\n                                    <Row className=\"height-list-profile\">\r\n                                        <Col md=\"1\" className=\" d-flex justify-content-end align-items-center\">\r\n                                            <img src={Envelope} alt=\"email\" />\r\n                                        </Col>\r\n                                        <Col md=\"11\">\r\n                                            <span className=\" d-block\"> {detailUser.email}</span>\r\n                                            <small className=\"text-muted \">Email</small>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"height-list-profile\">\r\n                                        <Col md=\"1\" className=\" d-flex justify-content-end align-items-center\">\r\n                                            <img src={Gender} alt=\"gender\" />\r\n                                        </Col>\r\n                                        <Col md=\"11\">\r\n                                            <span className=\" d-block\"> {detailUser.gender}</span>\r\n                                            <small className=\"text-muted \">Gender</small>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    \r\n                                    <Row className=\"height-list-profile\">\r\n                                        <Col md=\"1\" className=\" d-flex justify-content-end align-items-center\">\r\n                                            <img src={Phone} alt=\"gender\" />\r\n                                        </Col>\r\n                                        <Col md=\"11\">\r\n                                            <span className=\" d-block\"> {detailUser.phone}</span>\r\n                                            <small className=\"text-muted \">Mobile phone</small>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"height-list-profile\">\r\n                                        <Col md=\"1\" className=\" d-flex justify-content-end align-items-center\">\r\n                                            <img src={Maps} alt=\"gender\" />\r\n                                        </Col>\r\n                                        <Col md=\"11\">\r\n                                            <span className=\" d-block\"> {detailUser.address} </span>\r\n                                            <small className=\"text-muted \">Address</small>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </Col>\r\n\r\n                                <Col md=\"3\">\r\n                                    <img src={detailUser.avatar === null ? Avatar : detailUser.avatar} alt=\"profile_image\" className=\"image-profile img-fluid d-inline-block\" />\r\n\r\n                                    <Buttons className=\"buttons-red btn-block font-weight-bold mt-2 mb-2 d-block\"  type=\"submit\" title=\"Edit Profile\" />\r\n\r\n                                </Col>\r\n                                \r\n                            </Row>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default HeroProfile\r\n","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\MainContent\\index.js",["456","457"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Navbars\\index.js",["458","459","460","461","462","463"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Auth\\Register.js",["464","465"],"import React, { Fragment, useState, useContext, useEffect } from 'react'\r\nimport { Col, Container, Form, Modal, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// component\r\nimport {Buttons, Inputs} from '../../';// same ../../index.js take file Buttons\r\nimport {AppContext, API, setAuthToken} from '../../../configs';\r\nimport {Loading} from '../../../components';\r\n\r\n// styling\r\nimport \"./Auth.css\";\r\n\r\nconst Register = ({titleModal, classModalButton  }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [state, dispatch] = useContext(AppContext);\r\n\r\n    const [show, setShow] = useState(false);\r\n    \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    // setModal Loading\r\n    const [showModalLoading, setShowModalLoading] = useState(false);\r\n    const handleCloseLoading = () => setShowModalLoading(false);\r\n    const handleShowModalLoading = () => setShowModalLoading(true);\r\n    // setModal Loading\r\n\r\n\r\n    // set modal login when user click link\r\n    const handleLogin = () => {\r\n        handleClose();\r\n        dispatch({\r\n            type: \"MODAL_LOGIN\",\r\n            payload : !state.modalLogin\r\n        });\r\n        handleCloseLoading();\r\n    }\r\n    // set modal login when user click link\r\n\r\n    // set login from another modal\r\n    useEffect(() => {\r\n        if (state.modalRegister) {\r\n            handleShow();\r\n            dispatch({\r\n                type:\"MODAL_REGISTER\",\r\n                payload : !state.modalRegister\r\n            })\r\n        }\r\n    }, [state.modalRegister])\r\n    // set login from another modal\r\n\r\n\r\n    // ======================================================\r\n    // set modal for Register failed\r\n    const [registerFailed, setRegisterFailed] = useState(false);\r\n    const [messageFailed, setMessageFailed] = useState(\"\");\r\n    \r\n    const handleCloseRegisterFailed = () => setRegisterFailed(false);\r\n    const handleRegisterFailed = () => setRegisterFailed(true);\r\n    // set modal for Register failed\r\n    // ======================================================\r\n\r\n    // ======================================================\r\n    // process register\r\n\r\n    const [formDataRegister, setFormDataRegister] = useState({\r\n        email: '',\r\n        password : '',\r\n        fullname : ''\r\n    });\r\n    \r\n    \r\n    const handleChangeRegister=(e)=> {\r\n        setFormDataRegister({\r\n            ...formDataRegister, [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    const {email, password, fullname} = formDataRegister;\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const body = JSON.stringify({email,password, fullname});\r\n\r\n            const config = {\r\n                headers : {\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n            }\r\n\r\n            handleShowModalLoading();\r\n            const response = await API.post('/register',body,config);\r\n\r\n            console.log(\"response register\", response);\r\n            const result = response.data.data.user;\r\n\r\n            if (response.status == 200) {\r\n                dispatch({\r\n                    type : \"AUTH\",\r\n                    payload: {\r\n                        id : result.id,\r\n                        fullname : result.fullname,\r\n                        avatar : null,\r\n                        role : 'user',\r\n                        token : result.token\r\n                    }\r\n                });\r\n\r\n                setAuthToken(result.token);\r\n                history.push('/user');\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(\"Your System Error : \", err);\r\n            setMessageFailed(\"Register Failed\")\r\n            handleRegisterFailed();\r\n        }\r\n    }\r\n    \r\n    // process Register\r\n    // ======================================================\r\n    \r\n    console.log(\"state dari register\",state);\r\n    // console.log(\"email register\",email);\r\n    // console.log(\"pass dari register\",password);\r\n    // console.log(\"fullname dari register\",fullname);\r\n    \r\n    return (\r\n        <Fragment>\r\n            {/* <Login titleModal=\"Sign sdf\" classModalButton=\"buttons-grey px-5 font-weight-bold\" /> */}\r\n            <Buttons onClick={handleShow} title={titleModal} className={classModalButton} />\r\n\r\n\r\n            <Modal show={show} onHide={handleClose} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    <Container>\r\n                        <Row className=\"my-3\">\r\n                            <Col md=\"12\">\r\n                                <h2 className=\"title-modal\">{titleModal}</h2>\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Inputs type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={e => handleChangeRegister(e)} />\r\n                                    <Inputs type=\"password\" placeholder=\"Password\" name=\"password\" onChange={e => handleChangeRegister(e)} />\r\n                                    <Inputs type=\"text\" placeholder=\"Full Name\" name=\"fullname\" value={fullname} onChange={e => handleChangeRegister(e)} />\r\n                                    <Buttons className=\"buttons-black btn-block font-weight-bold mt-2 mb-2\"  type=\"submit\" title={titleModal} />\r\n                                </Form>\r\n                                <div className=\"text-link\">\r\n                                    Already have an account ? Klik <b className=\"link-here\" \r\n                                    onClick={handleLogin}>Here</b>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* component modal Register failed */}\r\n            <Modal size=\"lg\" show={registerFailed} onHide={handleCloseRegisterFailed} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    <p className=\"modal-failed\">{messageFailed}</p>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* ================================== */}\r\n                {/* modal loading */}\r\n                {/* ================================== */}\r\n                <Modal size=\"lg\" show={showModalLoading} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                    <Modal.Body >\r\n                        <Loading />\r\n                    </Modal.Body>\r\n                </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\configs\\Routes\\PrivateRoute.js",[],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\configs\\Context\\index.js",["466"],"import {createContext, useReducer} from 'react';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst initialState = {\r\n    modalLogin : false,\r\n    modalRegister : false,\r\n    auth : false,\r\n    fullname : '',\r\n    avatar : null,\r\n    payment : false,\r\n    totalCart: { subtotal: 0, qty: 0, total: 0 },\r\n    carts : [],\r\n    isLoading : true// cek ketersedian token\r\n}\r\n\r\nconst reducer = (state, action)=> {\r\n    const {payload, type} = action;\r\n\r\n    switch (type) {\r\n        case \"MODAL_LOGIN\":\r\n            return{\r\n                ...state,\r\n                modalLogin : payload\r\n            }\r\n        case \"MODAL_REGISTER\":\r\n            return{\r\n                ...state,\r\n                modalRegister : payload\r\n            }\r\n        case \"USER_LOADED\" : \r\n            return {\r\n                ...state,\r\n                auth : true,\r\n                isLoading : false,\r\n                isLogin : true,\r\n                fullname : payload.fullname,\r\n                avatar : payload.avatar,\r\n                role : payload.role\r\n            }\r\n        case \"AUTH\":\r\n            localStorage.setItem(\"token\", payload.token);\r\n            return {\r\n                ...state,\r\n                auth : true,\r\n                fullname : payload.fullname,\r\n                avatar : payload.avatar,\r\n                role : payload.role\r\n            }\r\n        case \"INC_CART\":\r\n            // menambah/menaikan jumlah dari item yang akan dimasukan kedalam cart\r\n            // filter data cart berdasarkan id payload yang diterima untuk menyimpan array book yang sesuai\r\n            const filterExistedBook = state.carts.filter(\r\n                book => book.id == payload.id\r\n            );\r\n\r\n            if (filterExistedBook.length > 0) {\r\n                // jika ada data yang tersimapn\r\n                // lakukan proses map array ke state.carts\r\n                const newCart = state.carts.map(book=> {\r\n                    // karna kasusnya tidak ada plus/minus item, maka default qty item book == 1\r\n                    // jika id book dari state sama dengan yang dikirim di payload id, kembalikan data buku dan tambahkan qty book\r\n                    // if (book.id == payload.id) {\r\n                    //     return {...book, qty : book.qty + 1};\r\n                    // }else{\r\n                    //     // jika tidak aada id buku yang sama, maka return book awal\r\n                    //     return book;\r\n                    // }\r\n                    return book;\r\n                })\r\n\r\n                // return data state lainnya dan carts terbaru\r\n                return {\r\n                    ...state,\r\n                    carts : newCart\r\n                }\r\n            }\r\n\r\n            // buat variabel baru untuk menampung data array yang isinya data state carts dan juga payload kiriman serta qty nya\r\n            // selain id, isi variabel payload ada price\r\n            const newCart = [...state.carts, { ...payload, qty : 1}];\r\n            return {\r\n                ...state,\r\n                carts : newCart\r\n            }\r\n        case \"DEC_CART\":\r\n            return {\r\n                ...state,\r\n                carts: state.carts.map((book) => {\r\n                    if (book.id === payload.id) {\r\n                        return { ...book, qty: book.qty - 1 };\r\n                    } else {\r\n                        return book;\r\n                    }\r\n                }),\r\n            };\r\n        case \"SAVE_CART\":\r\n            // lakukan penyimpanan cart ke localstorage setelah proses cart(inc, dec and remove cart) selesai\r\n            localStorage.setItem(\"cart\", JSON.stringify(state.carts));\r\n            return state;\r\n        case \"UPDATE_CART\":\r\n            // ambil data cart dari localstogae dan simpan ke variabel\r\n            const cart = localStorage.getItem(\"cart\");\r\n            // jika tidak ada data di cart di localstorage return state default\r\n            if (!cart) {\r\n                return state;\r\n            }\r\n\r\n            // jika ada data di localstorage, return seluruh data\r\n            return { ...state, carts: JSON.parse(cart) };\r\n        case \"REMOVE_CART\":\r\n            return {\r\n                ...state,\r\n                carts: state.carts.filter(\r\n                    (book) => book.id !== payload.id\r\n                ),\r\n            };\r\n        case \"RESET_CART\":\r\n            localStorage.removeItem(\"cart\");\r\n            return {\r\n                ...state,\r\n                carts: [],\r\n            };\r\n        \r\n        case \"GET_TOTAL_CART\":\r\n            if (state.carts.length > 0) {\r\n                let subtotal = 0,\r\n                qty = 0,\r\n                total = 0;\r\n                state.carts.forEach((book) => {\r\n                    subtotal += +book.price;\r\n                    qty += +book.qty;\r\n                    total += +book.price * +book.qty;\r\n                });\r\n                return {\r\n                ...state,\r\n                totalCart: { subtotal, qty, total },\r\n                };\r\n            } else {\r\n                return {\r\n                ...state,\r\n                totalCart: initialState.totalCart,\r\n                };\r\n            }\r\n\r\n        case \"AUTH_ERROR\":\r\n        case \"LOGOUT\":\r\n            localStorage.removeItem(\"token\");\r\n            localStorage.removeItem(\"cart\");\r\n            return {\r\n                ...state,\r\n                auth : false,\r\n                isLoading: false,\r\n                payment: false,\r\n                listBook : [],\r\n                carts : []\r\n            }    \r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nexport const AppContextProvider = (props) => {\r\n    // state = initial state\r\n    // dispatch = reducer\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    return(\r\n        <AppContext.Provider value={[state, dispatch]}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    )\r\n}","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\index.js",[],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\pages\\index.js",[],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\index.js",[],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\pages\\Landing\\index.js",[],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\pages\\Home\\index.js",["467","468","469","470","471","472","473","474","475","476","477"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Book\\AddBook.js",["478","479","480","481"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Subscribe\\index.js",["482","483","484","485","486"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\atoms\\Uploads\\index.js",[],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\atoms\\Buttons\\index.js",[],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\assets\\index.js",[],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\DetailBook\\AboutDetailBook.js",["487","488","489","490"],"import React, { Fragment,useState, useContext, useEffect } from 'react';\r\nimport { Container, Modal } from 'react-bootstrap';\r\nimport {\r\n    useHistory,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\n// styling\r\nimport \"./DetailBook.css\";\r\n\r\n// component\r\nimport {AppContext, API} from '../../../configs';\r\nimport {Buttons} from '../../';// same ../../index.js take file Buttons\r\nimport {Loading} from '../../';\r\n\r\n// fontawesome\r\nimport { faShoppingBasket } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst AboutDetailBook = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const {id} = useParams();\r\n    console.log(\"log id dari about detail book \", id);\r\n\r\n    const [state, dispatch] = useContext(AppContext);\r\n\r\n    const [book, setBook] = useState([]);\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    // setModal Loading\r\n    const [showModalLoading, setShowModalLoading] = useState(false);\r\n    const handleCloseLoading = () => setShowModalLoading(false);\r\n    const handleShowModalLoading = () => setShowModalLoading(true);\r\n    // setModal Loading\r\n\r\n    // const book = Books.find(book => book.id == id);\r\n    const loadBookById = async () => {\r\n        try {\r\n            const response = await API(`/book/${id}`);\r\n\r\n            console.log(\"response getbook by id\", response);\r\n            if (response.status == 200) {\r\n                setBook(response.data.data.book);\r\n                setLoading(false);\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your System \",err);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        loadBookById();\r\n    }, []);\r\n\r\n    const handleCart = (book) => {\r\n        dispatch({\r\n            type: \"INC_CART\",\r\n            payload: { price: book.price, id: book.id },\r\n        });\r\n        dispatch({\r\n            type: \"SAVE_CART\",\r\n        });\r\n        history.push('/user/cart')\r\n    }\r\n    \r\n\r\n    console.log(\"state dari about detail book \", state);\r\n\r\n    // const activeAddList = tes.filter(check => check == true );\r\n    // console.log(\"hasil tes filter\", activeAddList);\r\n    return isLoading ? (<Loading />) : (\r\n        <Fragment>\r\n            <Container>\r\n                <h3 className=\"title-AboutDetailBook\">About This Book</h3>\r\n\r\n                <p className=\"desc-AboutDetailBook\">\r\n                    {ReactHtmlParser(book.description)}\r\n                </p>\r\n\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Buttons className=\"buttons-black font-weight-bold mt-2 mb-2 mr-3 btn-secondary\" onClick={() => handleCart(book)}  type=\"submit\" title=\"Add Cart\" icon={<FontAwesomeIcon className=\"ml-3\" icon={faShoppingBasket} />}  />\r\n                </div>\r\n\r\n            </Container>\r\n\r\n            {/* ================================== */}\r\n            {/* modal loading */}\r\n            {/* ================================== */}\r\n            <Modal size=\"lg\" show={showModalLoading} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                <Modal.Body >\r\n                    <Loading />\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AboutDetailBook\r\n","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Profile\\ListBookProfile.js",["491","492","493","494","495","496","497","498"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\configs\\Routes\\index.js",["499"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\configs\\index.js",[],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Cart\\BookCart.js",["500","501"],"import { Fragment, useEffect, useContext, useState } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport {AppContext, API} from '../../../configs';\r\n\r\nimport {Remove} from '../../../assets';\r\nimport {Loading} from '../../../components';\r\n\r\nimport './Cart.css';\r\n\r\nconst BookCart = ({dataCart}) => {\r\n\r\n    const [state, dispatch] = useContext(AppContext);\r\n    const [book, setBook] = useState(null);\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    console.log(\"props cart\", dataCart);\r\n\r\n    useEffect(() => {\r\n        dataCart && (\r\n            (async () => {\r\n                const response = await await API(`/book/${dataCart.id}`);\r\n                if (response.status == 200) {\r\n                    const result = response.data.data.book;\r\n                    console.log(\"result book cart\", result);\r\n                    setBook(result);                    \r\n                    setLoading(false);\r\n                }      \r\n            })()\r\n        )\r\n    },[dataCart])\r\n\r\n    const saveCart = () => {\r\n        dispatch({\r\n        type: \"SAVE_CART\",\r\n        });\r\n        dispatch({\r\n        type: \"GET_TOTAL_CART\",\r\n        });\r\n    };\r\n\r\n    // const onInc = () => {\r\n    //     dispatch({\r\n    //     type: \"INC_CART\",\r\n    //     payload: dataCart,\r\n    //     });\r\n    //     saveCart();\r\n    // };\r\n\r\n    // const onDec = () => {\r\n    //     if (dataCart.qty > 1) {\r\n    //     dispatch({\r\n    //         type: \"DEC_CART\",\r\n    //         payload: dataCart,\r\n    //     });\r\n    //     } else {\r\n    //     dispatch({\r\n    //         type: \"REMOVE_CART\",\r\n    //         payload: dataCart,\r\n    //     });\r\n    //     }\r\n    //     saveCart();\r\n    // };\r\n\r\n    const onRemove = () => {\r\n        dispatch({\r\n            type: \"REMOVE_CART\",\r\n            payload: dataCart,\r\n        });\r\n        saveCart();\r\n    };\r\n\r\n    console.log(\"book cart\", book);\r\n\r\n\r\n    return isLoading ? (<Loading className=\"d-flex justify-content-center align-items-center\" />) : (\r\n        <Fragment>\r\n            <Row key={book.id} className=\"mb-2\">\r\n                <Col md=\"3\">\r\n                    <img src={book.thumbnail} alt=\"book\" className=\"img-fluid\" />\r\n                </Col>\r\n                <Col md=\"7\">\r\n                    <p className=\"text-title-book\">{book.title}</p>\r\n\r\n                    {/* <div className=\"d-flex\">\r\n                        <span className=\"cursor-pointer\" onClick={onDec}>\r\n                        -\r\n                        </span>\r\n\r\n                        <div className=\"align-center px-3\">\r\n                            <p className=\"cart-qty-num\">{dataCart.qty}</p>\r\n                        </div>\r\n\r\n                        <span className=\"cursor-pointer\" onClick={onInc}>\r\n                        +\r\n                        </span>\r\n                    </div> */}\r\n\r\n                    <p className=\"text-reguler font-italic text-capitalize\">By. {book.author}</p>\r\n                    <p className=\"text-price\">\r\n                        <NumberFormat \r\n                            value={book.price} \r\n                            displayType={'text'} \r\n                            thousandSeparator={true} \r\n                            prefix={'Rp. '} \r\n                            renderText={\r\n                                value => <small className=\"price-book d-block mt-3\">{value}</small>\r\n                            } />\r\n                    </p>\r\n                </Col>\r\n                <Col md=\"1\">\r\n                    <img src={Remove} alt=\"remove\" className=\"cursor-pointer\" onClick={onRemove} />\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default BookCart\r\n","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Transactions\\index.js",["502","503","504","505","506","507","508","509"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Table, NavDropdown, Container, Modal, Form, Button } from 'react-bootstrap';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n// component\r\nimport {API} from '../../../configs';\r\n\r\nimport {Loading} from '../../../components';\r\n\r\n// styling\r\nimport \"./Transactions.css\";\r\n\r\nconst Transactions = () => {\r\n\r\n    const [transactions, setTransactions] = useState([]);\r\n\r\n    const [idTransactionCancel, setIdTransactionCancel] = useState(null);\r\n    const [descTransactionCancel, setDescTransactionCancel] = useState(\"\");\r\n\r\n    // make state for loading file\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    // setModal Loading\r\n    const [showModalLoading, setShowModalLoading] = useState(false);\r\n    const handleCloseLoading = () => setShowModalLoading(false);\r\n    const handleShowModalLoading = () => setShowModalLoading(true);\r\n    // setModal Loading\r\n\r\n    // setModal Approved\r\n    const [showModal, setShowModal] = useState(false);\r\n    const handleClose = () => setShowModal(false);\r\n    const handleShowModal = () => setShowModal(true);\r\n    // setModal Approved\r\n\r\n    // setModal Cancel\r\n    const [showModalCancel, setShowModalCancel] = useState(false);\r\n    const toogleCancel = () => setShowModalCancel(!showModalCancel);\r\n    // setModal Cancel\r\n\r\n    // state modal image\r\n    const [fileImage, setfileImage] = useState(false);\r\n    const [imageModal, setImageModal] = useState(false);\r\n    const toogleImage = () => setImageModal(!imageModal);\r\n    // state modal image\r\n\r\n    const handleApprove = async (id) => {\r\n        try {\r\n            handleShowModalLoading();\r\n            const response = await API.patch(`/approved-transaction/${id}`);\r\n            console.log(\"response transaction update approve\", response);\r\n            if (response.status == 200) {\r\n                handleShowModal();\r\n                handleCloseLoading();\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your system error \",err);\r\n            handleCloseLoading();\r\n        }\r\n    }\r\n\r\n    const loadTransaction = async () => {\r\n        try {\r\n            const response = await API('/transactions');\r\n\r\n            if (response.status == 200) {\r\n                console.log(\"hasil response\", response.data.data.transactions);\r\n                setTransactions(response.data.data.transactions);\r\n                setLoading(false);\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your system error : \", err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadTransaction();\r\n    }, [showModal]);\r\n\r\n\r\n    // =====================================================================\r\n    // SUB Desc Cancel\r\n    // =====================================================================\r\n\r\n    const handleDescCancel = (e) => {\r\n        console.log(\"data desc cancel\",e.target.value);\r\n        setDescTransactionCancel(e.target.value);\r\n    } \r\n\r\n    const handleCancel = (id) => {\r\n        try {\r\n            console.log(\"id cancel \", id);\r\n            setIdTransactionCancel(id);\r\n            toogleCancel();\r\n        } catch (err) {\r\n            console.log(\"Your System \",err);\r\n        }\r\n    }\r\n\r\n    const handleSubmitCancel = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const body = JSON.stringify({ descCancel: descTransactionCancel});\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n\r\n            const response = await API.patch(`/cancel-transaction/${idTransactionCancel}`,body,config);\r\n            console.log(\"response cance\", response);\r\n\r\n            if (response.status == 200) {\r\n                toogleCancel();\r\n                loadTransaction();\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your System \", err);\r\n        }\r\n        console.log(\"total data desc cancel\", descTransactionCancel);\r\n    }\r\n\r\n    console.log(\"data transaction\", transactions);\r\n\r\n    let no = 1;//no urut untuk tabel\r\n\r\n    return isLoading ? (<Loading className=\"d-flex justify-content-center align-items-center\" />) \r\n        : (\r\n        <Fragment>\r\n            <Container>\r\n                <h3 className=\"title-dashboard\">Incoming Transaction</h3>\r\n                \r\n                <Table striped hover variant=\"light\" id=\"table-transaction\">\r\n                    <thead className=\"text-danger\">\r\n                        <tr>\r\n                        <th className=\"head-transactions\">No</th>\r\n                        <th className=\"head-transactions\">Users</th>\r\n                        <th className=\"head-transactions\">Evidence of Transfer</th>\r\n                        <th className=\"head-transactions\">Product Purchased</th>\r\n                        <th className=\"head-transactions\">Total Payment</th>\r\n                        <th className=\"head-transactions\">Status Payment</th>\r\n                        <th className=\"head-transactions\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {\r\n                            transactions.length > 0 ? (\r\n\r\n                                transactions.map(transaction => (\r\n                                    <tr key={transaction.id}>\r\n                                        <td>{no++}</td>\r\n                                        <td className=\"text-capitalize\">{transaction.user.fullname}</td>\r\n                                        <td>\r\n                                            <img src={transaction.attachment} alt=\"transfer_image\" style={{cursor:\"pointer\"}} onClick={() => {\r\n                                                setfileImage(transaction.attachment);\r\n                                                toogleImage();\r\n                                            }} width=\"30px\" height=\"30px\" />\r\n                                        </td>\r\n                                        <td>\r\n                                            {\r\n                                                transaction.purchasedbooks.map(book => {\r\n                                                    return book.title\r\n                                                }).join()\r\n                                            }\r\n                                        </td>\r\n                                        <td>\r\n                                            <NumberFormat \r\n                                                value={transaction.totalPayment} \r\n                                                displayType={'text'} \r\n                                                thousandSeparator={true} \r\n                                                prefix={'Rp. '} \r\n                                                renderText={\r\n                                                    value => <small className={transaction.userStatus == 'Approved' ? \"status-payment-approve\" : transaction.userStatus == 'Pending' ? \"status-payment-pending\" : \"status-payment-cancel\" }>{value}</small>\r\n                                                } />\r\n                                        </td>\r\n                                        <td className={transaction.userStatus == 'Approved' ? \"status-payment-approve\" : transaction.userStatus == 'Pending' ? \"status-payment-pending\" : \"status-payment-cancel\" } >\r\n                                            {transaction.userStatus}\r\n                                        </td>\r\n                                        <td>\r\n                                            {transaction.userStatus == 'Pending' ? (\r\n                                                <NavDropdown id=\"basic-nav-dropdown\">\r\n                                                    <NavDropdown.Item onClick={() => {handleApprove(transaction.id)}} className=\"status-payment-approve\">Approved</NavDropdown.Item>\r\n                                                    \r\n                                                    <NavDropdown.Item  className=\"status-payment-cancel\" onClick={() => {handleCancel(transaction.id)}}>Cancel</NavDropdown.Item>\r\n                                                </NavDropdown>\r\n                                            ) : null}\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n\r\n                            ) : (\r\n                                <tr>\r\n                                    <td colSpan=\"7\" align=\"center\"><h3 className=\"status-payment-cancel mt-2\" style={{fontFamily:\"Roboto\", fontWeight:\"bold\"}}>Data Not Found</h3></td>\r\n                                </tr>\r\n\r\n                            )\r\n\r\n                        }\r\n\r\n                    </tbody>\r\n                </Table>\r\n\r\n                {/* ================================== */}\r\n                {/* modal Preview Image */}\r\n                {/* ================================== */}\r\n                <Modal size=\"lg\" show={imageModal} onHide={toogleImage} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                    <Modal.Body >\r\n                        <img src={fileImage} alt=\"attach file\" className=\"text-center img-fluid\" />\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                {/* ================================== */}\r\n                {/* modal loading */}\r\n                {/* ================================== */}\r\n                <Modal size=\"lg\" show={showModalLoading} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                    <Modal.Body >\r\n                        <Loading />\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                {/* ================================== */}\r\n                {/* modal response approved */}\r\n                {/* ================================== */}\r\n                <Modal size=\"lg\" show={showModal} onHide={handleClose} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                    <Modal.Body >\r\n                        <p className=\"text-success\">Approved Transaction Success</p>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                {/* ================================== */}\r\n                {/* modal response CANCEL */}\r\n                {/* ================================== */}\r\n                <Modal size=\"lg\" show={showModalCancel} onHide={toogleCancel} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                    <Modal.Body >\r\n                        <Form onSubmit={handleSubmitCancel}>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Label>Desc Cancel Transaction</Form.Label>\r\n                                <Form.Control as=\"textarea\" name=\"descCancel\" rows={3} onChange={handleDescCancel} />\r\n                            </Form.Group>\r\n\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={toogleCancel}>\r\n                                    Close\r\n                                </Button>\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Save Changes\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Transactions\r\n","D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\atoms\\Loading\\index.js",[],["510","511"],"D:\\Projek\\fullstack javascript\\waysBookFE\\src\\components\\molecules\\Book\\index.js",["512","513","514","515"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Table, NavDropdown, Container, Modal, Form, Button } from 'react-bootstrap';\r\nimport NumberFormat from 'react-number-format';\r\nimport Moment from 'react-moment';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n// component\r\nimport {API} from '../../../configs';\r\n\r\nimport {Loading} from '../../../components';\r\n\r\n// styling\r\nimport \"./Book.css\";\r\nimport { Buttons } from '../../atoms';\r\n\r\nconst Book = () => {\r\n\r\n    const [books, setBooks] = useState([]);\r\n\r\n    // make state for loading file\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    const loadBooks = async () => {\r\n        try {\r\n            const response = await API('/books');\r\n\r\n            if (response.status == 200) {\r\n                console.log(\"hasil response\", response.data.data.promoBooks);\r\n                setBooks(response.data.data.promoBooks);\r\n                setLoading(false);\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your system error : \", err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadBooks();\r\n    }, []);\r\n\r\n\r\n    console.log(\"data book\", books);\r\n\r\n    let no = 1;//no urut untuk tabel\r\n\r\n    return isLoading ? (<Loading className=\"d-flex justify-content-center align-items-center\" />) \r\n        : (\r\n        <Fragment>\r\n            <Container>\r\n                <div class=\"d-flex justify-content-between mb-3\">\r\n                    <h3 className=\"title-dashboard\">Books</h3>\r\n\r\n                    <Link to=\"/admin/addBook\">\r\n                        <Buttons title=\"Add Book\" className=\"buttons-black font-weight-bold mt-2 mb-2\" />\r\n                    </Link>\r\n                </div>\r\n\r\n                <Table striped hover variant=\"light\" id=\"table-transaction\">\r\n                    <thead className=\"text-danger\">\r\n                        <tr>\r\n                        <th className=\"head-transactions\">No</th>\r\n                        <th className=\"head-transactions\">Title</th>\r\n                        <th className=\"head-transactions\">Author</th>\r\n                        <th className=\"head-transactions\">Publication Date</th>\r\n                        <th className=\"head-transactions\">Price</th>\r\n                        <th className=\"head-transactions\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {\r\n                            books.length > 0 ? (\r\n\r\n                                books.map(book => (\r\n                                    <tr key={book.id}>\r\n                                        <td>{no++}</td>\r\n                                        <td className=\"text-capitalize\">{book.title}</td>\r\n                                        <td className=\"text-capitalize\">{book.author}</td>\r\n                                        <td><Moment format='MMM YYYY'>{book.publicationDate}</Moment></td>\r\n                                        <td>\r\n                                            <NumberFormat \r\n                                                value={book.price} \r\n                                                displayType={'text'} \r\n                                                thousandSeparator={true} \r\n                                                prefix={'Rp. '} \r\n                                                renderText={\r\n                                                    value => <small>{value}</small>\r\n                                                } />\r\n                                        </td>\r\n                                        <td>\r\n                                            <NavDropdown id=\"basic-nav-dropdown\">\r\n                                                <NavDropdown.Item className=\"status-payment-approve\">Edit</NavDropdown.Item>\r\n                                                {/*  onClick={() => {handleApprove(book.id)}}  */}\r\n                                                \r\n                                                <NavDropdown.Item  className=\"status-payment-cancel\" >Delete</NavDropdown.Item> \r\n                                                {/* onClick={() => {handleCancel(book.id)}} */}\r\n                                            </NavDropdown>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n\r\n                            ) : (\r\n                                <tr>\r\n                                    <td colSpan=\"7\" align=\"center\"><h3 className=\"status-payment-cancel mt-2\" style={{fontFamily:\"Roboto\", fontWeight:\"bold\"}}>Data Not Found</h3></td>\r\n                                </tr>\r\n\r\n                            )\r\n\r\n                        }\r\n\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Book\r\n",{"ruleId":"516","replacedBy":"517"},{"ruleId":"518","replacedBy":"519"},{"ruleId":"520","severity":1,"message":"521","line":45,"column":6,"nodeType":"522","endLine":45,"endColumn":8,"suggestions":"523"},{"ruleId":"516","replacedBy":"524"},{"ruleId":"518","replacedBy":"525"},{"ruleId":"526","severity":1,"message":"527","line":3,"column":5,"nodeType":"528","messageId":"529","endLine":3,"endColumn":11},{"ruleId":"516","replacedBy":"530"},{"ruleId":"518","replacedBy":"531"},{"ruleId":"520","severity":1,"message":"532","line":54,"column":8,"nodeType":"522","endLine":54,"endColumn":29,"suggestions":"533"},{"ruleId":"534","severity":1,"message":"535","line":104,"column":33,"nodeType":"536","messageId":"537","endLine":104,"endColumn":35},{"ruleId":"516","replacedBy":"538"},{"ruleId":"518","replacedBy":"539"},{"ruleId":"520","severity":1,"message":"532","line":63,"column":8,"nodeType":"522","endLine":63,"endColumn":26,"suggestions":"540"},{"ruleId":"534","severity":1,"message":"535","line":99,"column":33,"nodeType":"536","messageId":"537","endLine":99,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":109,"column":33,"nodeType":"536","messageId":"537","endLine":109,"endColumn":35},{"ruleId":"526","severity":1,"message":"541","line":21,"column":9,"nodeType":"528","messageId":"529","endLine":21,"endColumn":16},{"ruleId":"526","severity":1,"message":"542","line":27,"column":12,"nodeType":"528","messageId":"529","endLine":27,"endColumn":17},{"ruleId":"526","severity":1,"message":"543","line":29,"column":17,"nodeType":"528","messageId":"529","endLine":29,"endColumn":20},{"ruleId":"526","severity":1,"message":"544","line":38,"column":11,"nodeType":"528","messageId":"529","endLine":38,"endColumn":21},{"ruleId":"534","severity":1,"message":"535","line":52,"column":44,"nodeType":"536","messageId":"537","endLine":52,"endColumn":46},{"ruleId":"520","severity":1,"message":"521","line":72,"column":8,"nodeType":"522","endLine":72,"endColumn":10,"suggestions":"545"},{"ruleId":"534","severity":1,"message":"535","line":83,"column":41,"nodeType":"536","messageId":"537","endLine":83,"endColumn":43},{"ruleId":"520","severity":1,"message":"546","line":100,"column":8,"nodeType":"522","endLine":100,"endColumn":10,"suggestions":"547"},{"ruleId":"516","replacedBy":"548"},{"ruleId":"518","replacedBy":"549"},{"ruleId":"526","severity":1,"message":"550","line":1,"column":39,"nodeType":"528","messageId":"529","endLine":1,"endColumn":48},{"ruleId":"526","severity":1,"message":"551","line":1,"column":50,"nodeType":"528","messageId":"529","endLine":1,"endColumn":58},{"ruleId":"526","severity":1,"message":"552","line":30,"column":11,"nodeType":"528","messageId":"529","endLine":30,"endColumn":15},{"ruleId":"534","severity":1,"message":"535","line":71,"column":82,"nodeType":"536","messageId":"537","endLine":71,"endColumn":84},{"ruleId":"534","severity":1,"message":"535","line":79,"column":84,"nodeType":"536","messageId":"537","endLine":79,"endColumn":86},{"ruleId":"526","severity":1,"message":"552","line":21,"column":11,"nodeType":"528","messageId":"529","endLine":21,"endColumn":15},{"ruleId":"534","severity":1,"message":"535","line":53,"column":33,"nodeType":"536","messageId":"537","endLine":53,"endColumn":35},{"ruleId":"526","severity":1,"message":"553","line":4,"column":22,"nodeType":"528","messageId":"529","endLine":4,"endColumn":28},{"ruleId":"526","severity":1,"message":"554","line":5,"column":5,"nodeType":"528","messageId":"529","endLine":5,"endColumn":9},{"ruleId":"526","severity":1,"message":"555","line":7,"column":5,"nodeType":"528","messageId":"529","endLine":7,"endColumn":10},{"ruleId":"526","severity":1,"message":"556","line":23,"column":9,"nodeType":"528","messageId":"529","endLine":23,"endColumn":16},{"ruleId":"534","severity":1,"message":"535","line":50,"column":33,"nodeType":"536","messageId":"537","endLine":50,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":64,"column":33,"nodeType":"536","messageId":"537","endLine":64,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":113,"column":33,"nodeType":"536","messageId":"537","endLine":113,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":161,"column":79,"nodeType":"536","messageId":"537","endLine":161,"endColumn":81},{"ruleId":"534","severity":1,"message":"535","line":164,"column":82,"nodeType":"536","messageId":"537","endLine":164,"endColumn":84},{"ruleId":"534","severity":1,"message":"535","line":164,"column":151,"nodeType":"536","messageId":"537","endLine":164,"endColumn":153},{"ruleId":"534","severity":1,"message":"535","line":168,"column":72,"nodeType":"536","messageId":"537","endLine":168,"endColumn":74},{"ruleId":"534","severity":1,"message":"535","line":44,"column":40,"nodeType":"536","messageId":"537","endLine":44,"endColumn":42},{"ruleId":"526","severity":1,"message":"557","line":91,"column":11,"nodeType":"528","messageId":"529","endLine":91,"endColumn":30},{"ruleId":"526","severity":1,"message":"558","line":96,"column":11,"nodeType":"528","messageId":"529","endLine":96,"endColumn":23},{"ruleId":"534","severity":1,"message":"535","line":161,"column":33,"nodeType":"536","messageId":"537","endLine":161,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":242,"column":31,"nodeType":"536","messageId":"537","endLine":242,"endColumn":33},{"ruleId":"516","replacedBy":"559"},{"ruleId":"518","replacedBy":"560"},{"ruleId":"526","severity":1,"message":"556","line":18,"column":11,"nodeType":"528","messageId":"529","endLine":18,"endColumn":18},{"ruleId":"526","severity":1,"message":"542","line":20,"column":12,"nodeType":"528","messageId":"529","endLine":20,"endColumn":17},{"ruleId":"526","severity":1,"message":"561","line":20,"column":19,"nodeType":"528","messageId":"529","endLine":20,"endColumn":27},{"ruleId":"534","severity":1,"message":"535","line":112,"column":33,"nodeType":"536","messageId":"537","endLine":112,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":181,"column":35,"nodeType":"536","messageId":"537","endLine":181,"endColumn":37},{"ruleId":"516","replacedBy":"562"},{"ruleId":"518","replacedBy":"563"},{"ruleId":"526","severity":1,"message":"550","line":1,"column":49,"nodeType":"528","messageId":"529","endLine":1,"endColumn":58},{"ruleId":"526","severity":1,"message":"552","line":14,"column":11,"nodeType":"528","messageId":"529","endLine":14,"endColumn":15},{"ruleId":"534","severity":1,"message":"535","line":52,"column":47,"nodeType":"536","messageId":"537","endLine":52,"endColumn":49},{"ruleId":"534","severity":1,"message":"535","line":27,"column":37,"nodeType":"536","messageId":"537","endLine":27,"endColumn":39},{"ruleId":"526","severity":1,"message":"564","line":6,"column":8,"nodeType":"528","messageId":"529","endLine":6,"endColumn":14},{"ruleId":"534","severity":1,"message":"535","line":31,"column":33,"nodeType":"536","messageId":"537","endLine":31,"endColumn":35},{"ruleId":"520","severity":1,"message":"565","line":43,"column":8,"nodeType":"522","endLine":43,"endColumn":10,"suggestions":"566"},{"ruleId":"534","severity":1,"message":"535","line":43,"column":33,"nodeType":"536","messageId":"537","endLine":43,"endColumn":35},{"ruleId":"520","severity":1,"message":"565","line":55,"column":8,"nodeType":"522","endLine":55,"endColumn":10,"suggestions":"567"},{"ruleId":"534","severity":1,"message":"535","line":73,"column":29,"nodeType":"536","messageId":"537","endLine":73,"endColumn":31},{"ruleId":"534","severity":1,"message":"535","line":88,"column":62,"nodeType":"536","messageId":"537","endLine":88,"endColumn":64},{"ruleId":"534","severity":1,"message":"535","line":88,"column":96,"nodeType":"536","messageId":"537","endLine":88,"endColumn":98},{"ruleId":"534","severity":1,"message":"535","line":107,"column":50,"nodeType":"536","messageId":"537","endLine":107,"endColumn":52},{"ruleId":"534","severity":1,"message":"535","line":23,"column":33,"nodeType":"536","messageId":"537","endLine":23,"endColumn":35},{"ruleId":"520","severity":1,"message":"568","line":34,"column":8,"nodeType":"522","endLine":34,"endColumn":10,"suggestions":"569"},{"ruleId":"526","severity":1,"message":"542","line":6,"column":12,"nodeType":"528","messageId":"529","endLine":6,"endColumn":17},{"ruleId":"520","severity":1,"message":"532","line":15,"column":8,"nodeType":"522","endLine":15,"endColumn":10,"suggestions":"570"},{"ruleId":"516","replacedBy":"571"},{"ruleId":"518","replacedBy":"572"},{"ruleId":"520","severity":1,"message":"521","line":50,"column":6,"nodeType":"522","endLine":50,"endColumn":8,"suggestions":"573"},{"ruleId":"516","replacedBy":"574"},{"ruleId":"518","replacedBy":"575"},{"ruleId":"516","replacedBy":"576"},{"ruleId":"518","replacedBy":"577"},{"ruleId":"526","severity":1,"message":"553","line":4,"column":22,"nodeType":"528","messageId":"529","endLine":4,"endColumn":28},{"ruleId":"526","severity":1,"message":"554","line":5,"column":5,"nodeType":"528","messageId":"529","endLine":5,"endColumn":9},{"ruleId":"526","severity":1,"message":"555","line":7,"column":5,"nodeType":"528","messageId":"529","endLine":7,"endColumn":10},{"ruleId":"526","severity":1,"message":"556","line":23,"column":9,"nodeType":"528","messageId":"529","endLine":23,"endColumn":16},{"ruleId":"520","severity":1,"message":"532","line":63,"column":8,"nodeType":"522","endLine":63,"endColumn":26,"suggestions":"578"},{"ruleId":"534","severity":1,"message":"535","line":99,"column":33,"nodeType":"536","messageId":"537","endLine":99,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":109,"column":33,"nodeType":"536","messageId":"537","endLine":109,"endColumn":35},{"ruleId":"516","replacedBy":"579"},{"ruleId":"518","replacedBy":"580"},{"ruleId":"526","severity":1,"message":"542","line":6,"column":12,"nodeType":"528","messageId":"529","endLine":6,"endColumn":17},{"ruleId":"520","severity":1,"message":"532","line":15,"column":8,"nodeType":"522","endLine":15,"endColumn":10,"suggestions":"581"},{"ruleId":"516","replacedBy":"582"},{"ruleId":"518","replacedBy":"583"},{"ruleId":"534","severity":1,"message":"535","line":103,"column":33,"nodeType":"536","messageId":"537","endLine":103,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":240,"column":31,"nodeType":"536","messageId":"537","endLine":240,"endColumn":33},{"ruleId":"516","replacedBy":"584"},{"ruleId":"518","replacedBy":"585"},{"ruleId":"526","severity":1,"message":"564","line":6,"column":8,"nodeType":"528","messageId":"529","endLine":6,"endColumn":14},{"ruleId":"534","severity":1,"message":"535","line":32,"column":33,"nodeType":"536","messageId":"537","endLine":32,"endColumn":35},{"ruleId":"520","severity":1,"message":"565","line":44,"column":8,"nodeType":"522","endLine":44,"endColumn":10,"suggestions":"586"},{"ruleId":"534","severity":1,"message":"535","line":27,"column":37,"nodeType":"536","messageId":"537","endLine":27,"endColumn":39},{"ruleId":"526","severity":1,"message":"552","line":47,"column":11,"nodeType":"528","messageId":"529","endLine":47,"endColumn":15},{"ruleId":"534","severity":1,"message":"535","line":75,"column":33,"nodeType":"536","messageId":"537","endLine":75,"endColumn":35},{"ruleId":"526","severity":1,"message":"552","line":33,"column":11,"nodeType":"528","messageId":"529","endLine":33,"endColumn":15},{"ruleId":"534","severity":1,"message":"535","line":53,"column":44,"nodeType":"536","messageId":"537","endLine":53,"endColumn":46},{"ruleId":"534","severity":1,"message":"535","line":54,"column":46,"nodeType":"536","messageId":"537","endLine":54,"endColumn":48},{"ruleId":"534","severity":1,"message":"535","line":63,"column":36,"nodeType":"536","messageId":"537","endLine":63,"endColumn":38},{"ruleId":"534","severity":1,"message":"535","line":73,"column":38,"nodeType":"536","messageId":"537","endLine":73,"endColumn":40},{"ruleId":"534","severity":1,"message":"535","line":90,"column":41,"nodeType":"536","messageId":"537","endLine":90,"endColumn":43},{"ruleId":"520","severity":1,"message":"532","line":51,"column":8,"nodeType":"522","endLine":51,"endColumn":29,"suggestions":"587"},{"ruleId":"534","severity":1,"message":"535","line":101,"column":33,"nodeType":"536","messageId":"537","endLine":101,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":54,"column":33,"nodeType":"536","messageId":"537","endLine":54,"endColumn":35},{"ruleId":"526","severity":1,"message":"588","line":1,"column":26,"nodeType":"528","messageId":"529","endLine":1,"endColumn":36},{"ruleId":"526","severity":1,"message":"550","line":1,"column":38,"nodeType":"528","messageId":"529","endLine":1,"endColumn":47},{"ruleId":"526","severity":1,"message":"551","line":1,"column":49,"nodeType":"528","messageId":"529","endLine":1,"endColumn":57},{"ruleId":"526","severity":1,"message":"589","line":2,"column":10,"nodeType":"528","messageId":"529","endLine":2,"endColumn":13},{"ruleId":"526","severity":1,"message":"590","line":2,"column":14,"nodeType":"528","messageId":"529","endLine":2,"endColumn":17},{"ruleId":"526","severity":1,"message":"591","line":2,"column":20,"nodeType":"528","messageId":"529","endLine":2,"endColumn":25},{"ruleId":"526","severity":1,"message":"592","line":8,"column":5,"nodeType":"528","messageId":"529","endLine":8,"endColumn":15},{"ruleId":"526","severity":1,"message":"593","line":13,"column":23,"nodeType":"528","messageId":"529","endLine":13,"endColumn":26},{"ruleId":"526","severity":1,"message":"594","line":15,"column":9,"nodeType":"528","messageId":"529","endLine":15,"endColumn":19},{"ruleId":"526","severity":1,"message":"595","line":16,"column":10,"nodeType":"528","messageId":"529","endLine":16,"endColumn":21},{"ruleId":"526","severity":1,"message":"543","line":29,"column":17,"nodeType":"528","messageId":"529","endLine":29,"endColumn":20},{"ruleId":"526","severity":1,"message":"596","line":24,"column":28,"nodeType":"528","messageId":"529","endLine":24,"endColumn":45},{"ruleId":"526","severity":1,"message":"557","line":91,"column":11,"nodeType":"528","messageId":"529","endLine":91,"endColumn":30},{"ruleId":"534","severity":1,"message":"535","line":170,"column":33,"nodeType":"536","messageId":"537","endLine":170,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":254,"column":31,"nodeType":"536","messageId":"537","endLine":254,"endColumn":33},{"ruleId":"526","severity":1,"message":"556","line":18,"column":11,"nodeType":"528","messageId":"529","endLine":18,"endColumn":18},{"ruleId":"526","severity":1,"message":"542","line":20,"column":12,"nodeType":"528","messageId":"529","endLine":20,"endColumn":17},{"ruleId":"526","severity":1,"message":"561","line":20,"column":19,"nodeType":"528","messageId":"529","endLine":20,"endColumn":27},{"ruleId":"534","severity":1,"message":"535","line":112,"column":33,"nodeType":"536","messageId":"537","endLine":112,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":181,"column":35,"nodeType":"536","messageId":"537","endLine":181,"endColumn":37},{"ruleId":"526","severity":1,"message":"597","line":36,"column":11,"nodeType":"528","messageId":"529","endLine":36,"endColumn":29},{"ruleId":"526","severity":1,"message":"598","line":37,"column":11,"nodeType":"528","messageId":"529","endLine":37,"endColumn":33},{"ruleId":"534","severity":1,"message":"535","line":46,"column":33,"nodeType":"536","messageId":"537","endLine":46,"endColumn":35},{"ruleId":"520","severity":1,"message":"565","line":58,"column":8,"nodeType":"522","endLine":58,"endColumn":10,"suggestions":"599"},{"ruleId":"526","severity":1,"message":"552","line":16,"column":11,"nodeType":"528","messageId":"529","endLine":16,"endColumn":15},{"ruleId":"526","severity":1,"message":"556","line":18,"column":11,"nodeType":"528","messageId":"529","endLine":18,"endColumn":18},{"ruleId":"526","severity":1,"message":"542","line":20,"column":12,"nodeType":"528","messageId":"529","endLine":20,"endColumn":17},{"ruleId":"526","severity":1,"message":"600","line":33,"column":27,"nodeType":"528","messageId":"529","endLine":33,"endColumn":43},{"ruleId":"526","severity":1,"message":"601","line":34,"column":12,"nodeType":"528","messageId":"529","endLine":34,"endColumn":24},{"ruleId":"526","severity":1,"message":"602","line":34,"column":26,"nodeType":"528","messageId":"529","endLine":34,"endColumn":36},{"ruleId":"526","severity":1,"message":"603","line":37,"column":11,"nodeType":"528","messageId":"529","endLine":37,"endColumn":33},{"ruleId":"534","severity":1,"message":"535","line":46,"column":37,"nodeType":"536","messageId":"537","endLine":46,"endColumn":39},{"ruleId":"526","severity":1,"message":"527","line":3,"column":5,"nodeType":"528","messageId":"529","endLine":3,"endColumn":11},{"ruleId":"526","severity":1,"message":"542","line":14,"column":12,"nodeType":"528","messageId":"529","endLine":14,"endColumn":17},{"ruleId":"534","severity":1,"message":"535","line":25,"column":37,"nodeType":"536","messageId":"537","endLine":25,"endColumn":39},{"ruleId":"534","severity":1,"message":"535","line":51,"column":33,"nodeType":"536","messageId":"537","endLine":51,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":65,"column":33,"nodeType":"536","messageId":"537","endLine":65,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":114,"column":33,"nodeType":"536","messageId":"537","endLine":114,"endColumn":35},{"ruleId":"534","severity":1,"message":"535","line":175,"column":103,"nodeType":"536","messageId":"537","endLine":175,"endColumn":105},{"ruleId":"534","severity":1,"message":"535","line":175,"column":169,"nodeType":"536","messageId":"537","endLine":175,"endColumn":171},{"ruleId":"534","severity":1,"message":"535","line":178,"column":79,"nodeType":"536","messageId":"537","endLine":178,"endColumn":81},{"ruleId":"534","severity":1,"message":"535","line":178,"column":145,"nodeType":"536","messageId":"537","endLine":178,"endColumn":147},{"ruleId":"534","severity":1,"message":"535","line":182,"column":69,"nodeType":"536","messageId":"537","endLine":182,"endColumn":71},{"ruleId":"516","replacedBy":"604"},{"ruleId":"518","replacedBy":"605"},{"ruleId":"526","severity":1,"message":"606","line":2,"column":41,"nodeType":"528","messageId":"529","endLine":2,"endColumn":46},{"ruleId":"526","severity":1,"message":"607","line":2,"column":48,"nodeType":"528","messageId":"529","endLine":2,"endColumn":52},{"ruleId":"526","severity":1,"message":"608","line":2,"column":54,"nodeType":"528","messageId":"529","endLine":2,"endColumn":60},{"ruleId":"534","severity":1,"message":"535","line":29,"column":33,"nodeType":"536","messageId":"537","endLine":29,"endColumn":35},"no-native-reassign",["609"],"no-negated-in-lhs",["610"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["611"],["609"],["610"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar",["609"],["610"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["612"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["609"],["610"],["613"],"'paramId' is assigned a value but never used.","'state' is assigned a value but never used.","'url' is assigned a value but never used.","'ConsoleLog' is assigned a value but never used.",["614"],"React Hook useEffect has a missing dependency: 'loadBookUser'. Either include it or remove the dependency array.",["615"],["609"],["610"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'path' is assigned a value but never used.","'Router' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'history' is assigned a value but never used.","'handleShowModalBook' is assigned a value but never used.","'toggleFailed' is assigned a value but never used.",["609"],["610"],"'dispatch' is assigned a value but never used.",["609"],["610"],"'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'loadBookById'. Either include it or remove the dependency array.",["616"],["617"],"React Hook useEffect has a missing dependency: 'loadBook'. Either include it or remove the dependency array.",["618"],["619"],["609"],["610"],["620"],["609"],["610"],["609"],["610"],["621"],["609"],["610"],["622"],["609"],["610"],["609"],["610"],["623"],["624"],"'useContext' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Alert' is defined but never used.","'useHistory' is defined but never used.","'API' is defined but never used.","'AppContext' is defined but never used.","'LogoSidebar' is defined but never used.","'setProgressUpload' is assigned a value but never used.","'handleCloseLoading' is assigned a value but never used.","'handleShowModalLoading' is assigned a value but never used.",["625"],"'setMessageFailed' is assigned a value but never used.","'projectItems' is assigned a value but never used.","'setProject' is assigned a value but never used.","'handleDetailBookFailed' is assigned a value but never used.",["609"],["610"],"'Modal' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},{"desc":"626","fix":"632"},{"desc":"633","fix":"634"},{"desc":"635","fix":"636"},{"desc":"635","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},{"desc":"626","fix":"642"},{"desc":"630","fix":"643"},{"desc":"640","fix":"644"},{"desc":"635","fix":"645"},{"desc":"628","fix":"646"},{"desc":"635","fix":"647"},"Update the dependencies array to be: [loadUser]",{"range":"648","text":"649"},"Update the dependencies array to be: [dispatch, state.modalRegister]",{"range":"650","text":"651"},"Update the dependencies array to be: [dispatch, state.modalLogin]",{"range":"652","text":"653"},{"range":"654","text":"649"},"Update the dependencies array to be: [loadBookUser]",{"range":"655","text":"656"},"Update the dependencies array to be: [loadBookById]",{"range":"657","text":"658"},{"range":"659","text":"658"},"Update the dependencies array to be: [loadBook]",{"range":"660","text":"661"},"Update the dependencies array to be: [dispatch]",{"range":"662","text":"663"},{"range":"664","text":"649"},{"range":"665","text":"653"},{"range":"666","text":"663"},{"range":"667","text":"658"},{"range":"668","text":"651"},{"range":"669","text":"658"},[1042,1044],"[loadUser]",[1623,1644],"[dispatch, state.modalRegister]",[2198,2216],"[dispatch, state.modalLogin]",[2641,2643],[3718,3720],"[loadBookUser]",[1116,1118],"[loadBookById]",[1586,1588],[944,946],"[loadBook]",[407,409],"[dispatch]",[1106,1108],[2198,2216],[407,409],[1165,1167],[1560,1581],[1719,1721]]